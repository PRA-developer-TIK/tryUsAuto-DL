{"version":3,"sources":["assets/stylesGrey.js","assets/codeSnip.PNG","components/TryUsDialog.js","components/LayerTab.js","assets/KerasLayersJson.js","Keras/KerasLayersForValidation.js","App.js","Validation/Validation.js","reportWebVitals.js","index.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","component","variant","IconButton","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","useStyles","makeStyles","layerBody","background","App","marginLeft","marginRight","column1","marginTop","height","column2","width","textAlign","column3","overflowY","overflowX","grid1","grid2","grid3","droppableColsource","backgroundColor","borderRadius","display","flexDirection","minHeight","maxHeight","border","droppableColtarget","maxWidth","body3","item","marginBottom","item1selected","item1","item1Error","cloneBtn","float","minWidth","errBtn","inputFieldDesc","fontSize","fontWeight","styleclose","cursor","container","paddingLeft","heading","fontWeigth","paddingBottom","batch","overflow","title","transform","spancss","innerpad","value","infoiconLayer","infoiconPre","infoiconHyper","input","delete","minWeight","sel","_hyper","save_plot","action_btn","pad","tryUsBtn","codeSnip","filter","TryUsDialog","openModal","closeModal","handleCloseModal","useCallback","Dialog","open","style","id","dividers","src","codSnip","alt","justifyContent","Button","LayerTab","TabPanel","handleDragEnd","jsondata","components","selected_layer","selected_layer_type","showdetails","handleCloneLayer","invalidLayerIndices","validLayerIndices","save_value","useTheme","useState","selected_InputFieldDesc","setselected_InputFieldDesc","selectedWarnLayer","setSelectedWarnLayer","suggestDesc","setSuggestDesc","setOpenModal","onDragEnd","Grid","lg","md","sm","xs","droppableId","provided","snapshot","ref","innerRef","droppableProps","Object","keys","map","el","index","draggableId","draggableProps","dragHandleProps","includes","size","setTimeout","placeholder","has","name","length","opacity","key","FormControl","fullWidth","Select","native","onChange","arr","TextField","required","helperText","temp_json","Conv2D","filters","Example","Default","Required","Datatype","Options","Description","data_format","kernel_size","strides","kernel_initializer","bias_initializer","Dense","units","use_bias","activation","LSTM","recurrent_activation","dropout","return_sequences","return_state","SimpleRNN","Dropout","rate","noise_shape","seed","Flatten","ZeroPadding2D","AveragePooling2D","pool_size","MaxPooling2D","keras_layers","parameters","dimensions","expected_dim","returned_dim","config","setcomponents","setselected_layer_type","setselected_layer","Set","setInvalidLayerIndices","setValidLayerIndices","destination","source","tempArr","_","cloneDeep","console","log","element","temp","dragLayerIsSelcted","splice","i","err","list_names_of_source","dic","errors","validIndices","curr_layer","indices","layer","push","suggestLayers","add","invalidIndices","validate_layers","lastIndexOf","source_index","destination_index","Number","clonedLayer","some_dic","prop","event","param","pervstate","assign","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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AAa,oCAGfI,mBAAoB,CAClBT,QAAS,iBACTC,QAAS,iBACTC,SAAU,EACVC,SAAU,SACVC,QAAS,CACP,gBACA,iBACA,mBACA,oBACA,QACA,OACA,gBACA,iBACA,YAEFC,YAAa,6CAGfK,iBAAkB,CAChBV,QAAS,QACTC,QAAS,QACTC,SAAU,EACVC,SAAU,SACVC,QAAS,CACP,gBACA,iBACA,mBACA,oBACA,QACA,OACA,gBACA,iBACA,YAEFC,YAAa,oCAIjBU,KAAM,CACJH,MAAO,CACLZ,QAAS,GACTC,QAAS,KACTC,SAAU,EACVC,SAAU,SACVC,QAAS,GACTC,YAAa,yDAGfS,WAAY,CACVd,QAAS,OACTC,QAAS,OACTC,SAAU,EACVC,SAAU,SACVC,QAAS,CACP,OACA,UACA,UACA,WACA,WACA,OACA,OACA,OACA,OAEFC,YACE,mJAGJW,qBAAsB,CACpBhB,QAAS,UACTC,QAAS,UACTC,SAAU,EACVC,SAAU,SACVC,QAAS,CACP,OACA,UACA,UACA,WACA,WACA,OACA,OACA,OACA,OAEFC,YACE,mKAGJI,mBAAoB,CAClBT,QAAS,iBACTC,QAAS,iBACTC,SAAU,EACVC,SAAU,SACVC,QAAS,CACP,gBACA,iBACA,mBACA,oBACA,QACA,OACA,gBACA,iBACA,YAEFC,YAAa,6CAGfK,iBAAkB,CAChB,WAAY,SACZT,QAAS,QACTC,SAAU,EACVC,SAAU,SACVC,QAAS,CACP,gBACA,iBACA,mBACA,oBACA,QACA,OACA,gBACA,iBACA,YAEFC,YAAa,mCAGfY,QAAS,CACPhB,QAAS,EACTD,QAAS,GACTE,SAAU,EACVC,SAAU,SACVC,QAAS,GACTC,YACE,iHAGJa,iBAAkB,CAChBjB,QAAS,QACTD,QAAS,OACTE,SAAU,EACVC,SAAU,SACVC,QAAS,CAAC,OAAQ,SAClBC,YACE,4GAGJc,aAAc,CACZlB,QAAS,QACTD,QAAS,OACTE,SAAU,EACVC,SAAU,SACVC,QAAS,CAAC,OAAQ,SAClBC,YACE,yFAINe,UAAW,CACTR,MAAO,CACLZ,QAAS,GACTC,QAAS,KACTC,SAAU,EACVC,S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","file":"static/js/main.5674fe22.chunk.js","sourcesContent":["import { Typography, IconButton } from \"@material-ui/core\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nexport const styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    \r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n    \r\n  },\r\n});\r\n\r\nexport const DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography component={\"span\"} variant=\"h6\">\r\n        {children}\r\n      </Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nexport const DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nexport const DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  layerBody:{\r\n    // backgroundColor:\"#c5e4ed\",margin:\"2% 2%\",\r\n    // background: \"linear-gradient(90deg, rgba(77,82,82,1) 16%, rgba(6,6,6,1) 50%, rgba(77,82,82,1) 72%, rgba(6,6,6,1) 97%)\",\r\n    background: \"#F1F3F7\",\r\n    margin:\"1%\"\r\n  },\r\n  App: {\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10px\",\r\n  },\r\n  column1: {\r\n    padding: \"0px\",\r\n    marginTop:\"2%\",\r\n    height:\"80%\"\r\n  },\r\n  column2: {\r\n    padding: \"0px\",\r\n    width:\"80%\",\r\n    height:\"60%\",\r\n    margin:\"1%\",\r\n    textAlign:\"center\",\r\n  },\r\n  column3: {\r\n    width: \"95%\",\r\n    padding: \"0px\",\r\n    overflowY: \"auto\",\r\n    overflowX:\"hidden\",\r\n    textAlign:\"center\",\r\n\r\n  },\r\n\r\n  grid1: {},\r\n  grid2: {},\r\n  grid3: {},\r\n  droppableColsource: {\r\n    width: \"95%\",\r\n    // backgroundColor: \"#c5e4ed\",\r\n    backgroundColor: \"#252934\",\r\n    padding: \"10px 10px 0 10px\",\r\n    borderRadius: \"7px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"500px\",\r\n    maxHeight: \"400px\",\r\n    overflowY: \"auto\",\r\n    border: \"1px solid black\",\r\n    marginLeft:\"5%\"\r\n  },\r\n  droppableColtarget: {\r\n    width: \"90%\",\r\n    // backgroundColor: \"#c5e4ed\",\r\n    backgroundColor: \"#252934\",\r\n    padding: \"10px 10px 0 10px\",\r\n    borderRadius: \"7px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"500px\",\r\n    maxHeight: \"500px\",\r\n    maxWidth: \"100%\",\r\n    overflowY: \"auto\",\r\n    border: \"1px solid black\",\r\n    marginLeft:\"15%\"\r\n  },\r\n  body3: {\r\n    width: \"95%\",\r\n    backgroundColor: \"#252934\",\r\n    padding: \"10px\",\r\n    borderRadius: \"7px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"500px\",\r\n    maxHeight: \"480px\",\r\n    overflowY: \"auto\",\r\n    color:\"#FFF\",\r\n    border:\"1px solid black\"\r\n  },\r\n  item: {\r\n    textAlign: \"center\",\r\n    marginBottom: \"10px\",\r\n\r\n        // backgroundColor: \"#adbce6\",\r\n        background:\" #FFFFFF\",\r\n        color: \"#252934\",\r\n        border: \"1px solid black\",\r\n        padding: \"5px\",\r\n        borderRadius: \"7px\",\r\n    },\r\n    item1selected: {\r\n        textAlign: \"center\",\r\n        marginBottom: \"10px\",\r\n\r\n        backgroundColor: \"#D8D8D8\",\r\n        \r\n        color: \"#000\",\r\n        border: \"1px solid black\",\r\n        padding: \"5px\",\r\n        borderRadius: \"7px 7px 7px 7px\",\r\n        width: \"85%\",\r\n    },\r\n    item1: {\r\n        textAlign: \"center\",\r\n        marginBottom: \"10px\",\r\n        padding:\"3px\",\r\n        background:\" #FFFFFF\",\r\n        // backgroundColor: \"#adbce6\",\r\n        color: \"#252934\",\r\n        border: \"1px solid black\",\r\n        borderRadius: \"7px 7px 7px 7px\",\r\n        width: \"85%\",\r\n        \r\n        \r\n      },\r\n      item1Error: {\r\n        textAlign: \"center\",\r\n        marginBottom: \"10px\",\r\n        padding:\"5px\",\r\n        // backgroundColor: \"rgb(115,194,251)\",\r\n        backgroundColor: \"#D8D8D8\",\r\n        color: \"#D00000\",\r\n        border: \"1px solid black\",\r\n        borderRadius: \"7px 7px 7px 7px\",\r\n        width: \"85%\",\r\n        \r\n      },\r\n      cloneBtn :{\r\n        float:\"right\",\r\n        position:\"relative\",\r\n        \r\n        // height:\"20%\",\r\n        // width:\"20%\",\r\n        maxWidth: \"10%\",\r\n        minWidth: \"10%\",\r\n        maxHeight:\"10%\",\r\n        minHeight:\"10%\",\r\n      },\r\n      errBtn :{\r\n        float:\"right\",\r\n        position:\"relative\",\r\n        color:\"#D00000\",\r\n        // height:\"20%\",\r\n        // width:\"20%\",\r\n        maxWidth: \"15%\",\r\n        minWidth: \"15%\",\r\n        maxHeight:\"15%\",\r\n        minHeight:\"15%\",\r\n      },\r\n      inputFieldDesc:{\r\n        fontSize:\"80%\",\r\n        marginTop:\"1px\",\r\n        fontWeight:\"100\",\r\n        color:\"#a2a4a8\",\r\n        marginLeft:\"5%\"\r\n    },\r\n    styleclose: {\r\n        float: \"right\",\r\n        height: \"100%\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#FFC270\",\r\n        borderRadius: \"0px 7px 7px 0px\",\r\n        border: \"1px solid white\",\r\n        padding: \"1px\",\r\n        marginBottom: \"10px\",\r\n    },\r\n    container: {\r\n        position: \"relative\",\r\n        paddingLeft: \"10%\",\r\n    },\r\n    heading: {\r\n        textAlign: \"center\",\r\n        fontSize: \"120%\",\r\n        fontWeigth: \"900\",\r\n        paddingBottom: \"4px\",\r\n    },\r\n    batch: {\r\n        marginBottom: \"10px\",\r\n        backgroundColor: \"#f2f2f2\",\r\n        color: \"black\",\r\n        border: \"1px solid black\",\r\n        padding: \"5px\",\r\n        borderRadius: \"7px\",\r\n        position: \"relative\",\r\n        minHeight: \"80px\",\r\n        overflow:\"auto\"\r\n    },\r\n    title: {\r\n        float: \"left\",\r\n        width: \"45%\",\r\n        minHeight: \"70px\",\r\n        textAlign: \"center\",\r\n        transform: \"translateY(30%)\",\r\n        overflow:\"auto\",\r\n    },\r\n    spancss: {\r\n        marginLeft:\"40%\",\r\n        fontSize:\"120%\"\r\n        \r\n    },\r\n    innerpad:{\r\n      width:\"100%\"\r\n    },\r\n    value: {\r\n        float: \"left\",\r\n        width: \"45%\",\r\n        minHeight: \"70px\",\r\n        transform: \"translateY(15%)\",\r\n    },\r\n    infoiconLayer: {\r\n        float: \"right\",\r\n        // width: \"10%\",\r\n        textAlign: \"center\",\r\n        transform: \"translateY(50%)\",\r\n        // marginTop:\"2%\",\r\n        marginLeft:\"1%\",\r\n        \r\n        cursor: \"pointer\",\r\n    },\r\n    infoiconPre: {\r\n        float: \"right\",\r\n        // width: \"10%\",\r\n        textAlign: \"center\",\r\n        // transform: \"translateY(50%)\",\r\n        marginTop:\"1%\",\r\n        cursor: \"pointer\",\r\n    },\r\n    infoiconHyper:{\r\n      marginTop:\"1%\",\r\n      cursor:\"pointer\"\r\n    },\r\n    input:{\r\n      background:\"#000\",\r\n    },\r\n\r\n    delete: {\r\n        width:\"65%\",\r\n        backgroundColor: \"#252934\",\r\n        padding: \"10px\",\r\n        borderRadius: \"7px\",\r\n        minHeight: \"80px\",\r\n        minWeight: \"60px\",\r\n        margin: \"10px\",\r\n        textAlign: \"center\",\r\n        marginLeft:\"20%\",\r\n        marginRight:\"20%\",\r\n        color:\"#FFF\",\r\n        border:\"1px solid black\"\r\n\r\n    },\r\n    sel: {\r\n        // width: \"200px\",\r\n        // margin: \"20px\",\r\n       width:\"20%\",\r\n       margin:\"1%\",\r\n    },\r\n    _hyper: {\r\n        width: \"400px\",\r\n        margin: \"20px\",\r\n        marginLeft: \"30%\",\r\n    },\r\n    save_plot: {\r\n        marginTop: \"25px\",\r\n        \r\n    },\r\n    action_btn: {\r\n        float: \"right\",\r\n        margin: \"5px\",\r\n    },\r\n    pad: {\r\n        padding: \"7px\",\r\n    },\r\n    tryUsBtn:{\r\n      marginLeft:\"45%\",\r\n      marginBottom:\"1%\",\r\n      // background:\"#252934\",\r\n      border:\"1px solid black\",\r\n      fontWeight:\"bold\",\r\n      color:\"white\"\r\n\r\n    },\r\n    codeSnip:{\r\n      width:\"100%\",\r\n      \r\n      overflowX:\"hidden\",\r\n      filter:\"blur(4px)\",\r\n      overflowY:\"auto\",\r\n    }\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/codeSnip.bce17447.PNG\";","import { useCallback } from \"react\";\r\nimport {\r\n    Dialog,Button\r\n  } from \"@material-ui/core\";\r\n\r\nimport {\r\n  useStyles,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n} from \"../assets/stylesGrey\";\r\n\r\n\r\nimport codSnip from \"../assets/codeSnip.PNG\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst  TryUsDialog = ({openModal,closeModal})=>{\r\n\r\n    const handleCloseModal=useCallback(() =>{\r\n        closeModal(false);\r\n\r\n    },[closeModal]);\r\n\r\n    const classes=useStyles();\r\n\r\n\r\n    return(\r\n        <div >\r\n        <Dialog\r\n          open={openModal}\r\n          onClose={handleCloseModal}\r\n          style={{height:\"80%\",marginTop:\"5%\",width:\"100%\",textAlign:\"center\",fontWeight:\"bold\"}}\r\n          \r\n        >\r\n          <DialogTitle id=\"error-dialog-title\"  >\r\n             Code  generated!!!\r\n          </DialogTitle>\r\n          <DialogContent dividers >\r\n            <div  className={classes.codeSnip} >\r\n              <div>\r\n                <img src={codSnip} alt=\"code\"/>\r\n              </div>\r\n              \r\n            </div>\r\n            \r\n          </DialogContent>\r\n          <DialogActions style={{justifyContent: \"center\" }}>\r\n            <Button\r\n            style={{background:\"#252934\",color:\"#FFFFFF\"}}\r\n              variant=\"contained\"\r\n\r\n              onClick={handleCloseModal}\r\n              \r\n            >\r\n              REGISTER!\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default TryUsDialog;\r\n\r\n","import { Fragment ,useState} from \"react\";\r\nimport { Grid, TextField, FormControl, Select } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport { useStyles } from \"../assets/stylesGrey\";\r\n\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport FileCopySharpIcon from \"@material-ui/icons/FileCopySharp\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport TryUsDialog from \"./TryUsDialog\";\r\n\r\n\r\nconst LayerTab = ({\r\n  TabPanel,\r\n  handleDragEnd,\r\n  jsondata,\r\n  components,\r\n  selected_layer,\r\n  selected_layer_type,\r\n  showdetails,\r\n  handleCloneLayer,\r\n  invalidLayerIndices,\r\n  validLayerIndices,\r\n  save_value\r\n}) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const [selected_InputFieldDesc,setselected_InputFieldDesc]=useState(\"\");\r\n  const [selectedWarnLayer,setSelectedWarnLayer]=useState(\"\");\r\n  const [suggestDesc,setSuggestDesc]=useState(\"\");\r\n  const [openModal,setOpenModal]=useState(false)\r\n\r\n\r\n\r\n\r\n  return (\r\n   \r\n      <DragDropContext onDragEnd={handleDragEnd} theme={theme} >\r\n        <Grid container>\r\n          <Grid item lg={3} md={3} sm={4} xs={4} className={classes.grid1}>\r\n            <div key=\"source\" className={classes.column1}>\r\n              <span style={{marginLeft:\"50%\",fontSize:\"120%\",color:\"#000\"}}>Layers</span>\r\n\r\n              <Droppable droppableId=\"source\">\r\n                {(provided, snapshot) => {\r\n                  return (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      className={classes.droppableColsource}\r\n                    >\r\n                      {Object.keys(jsondata).map((el, index) => {\r\n                        return (\r\n                          <Draggable key={el} index={index} draggableId={el}>\r\n                            {(provided, snapshot) => {\r\n                              return (\r\n                                <div\r\n                                className={classes.item}\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                >\r\n                                  {el}\r\n                                  {validLayerIndices.includes(index)\r\n                                   && \r\n                                   <Button\r\n                                      size=\"small\"\r\n                                      style={{color:\"#5FCB8D\"}}\r\n                                      onClick={() => {\r\n                                        setSuggestDesc(index);\r\n                                        setTimeout(()=>setSuggestDesc(\"\"),3000);\r\n                                        }}\r\n                                      className={classes.cloneBtn}\r\n                                    >\r\n                                      <CheckCircleIcon fontSize=\"small\" />\r\n                                    </Button>\r\n\r\n                                  }\r\n                                  {suggestDesc===index &&\r\n                                    <div style={{fontSize:\"60%\",marginTop:\"1px\",fontWeight:\"bold\",color:\"#000\",textAlign:\"center\"}}>\r\n                                      Tip : Valid layer to be added.\r\n                                    </div>\r\n                                  }\r\n\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          </Draggable>\r\n                        );\r\n                      })}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Droppable>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item lg={5} md={5} sm={4} xs={4} className={classes.grid2}>\r\n            <div key=\"target\" className={classes.column2}>\r\n              <span style={{marginLeft:\"25%\",fontSize:\"120%\",color:\"#000\"}} >Model</span>\r\n\r\n              <Droppable droppableId=\"target\">\r\n                {(provided, snapshot) => {\r\n                  return (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      className={classes.droppableColtarget}\r\n                    >\r\n                      {components.map((el, index) => {\r\n                        \r\n                        return (\r\n                          <Draggable\r\n                            key={el.id}\r\n                            index={index}\r\n                            draggableId={el.id}\r\n                          >\r\n                            {(provided, snapshot) => {\r\n                              return (\r\n                                <div\r\n                                  className={classes.container}\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                >\r\n                                  <div\r\n                                  \r\n                                    className={\r\n                                      // selected_layer ===\r\n                                      // el.id.charAt(el.id.length - 1)\r\n                                      //   ? classes.item1selected\r\n                                      //   : classes.item1\r\n                                      invalidLayerIndices.has(index) && selected_layer===index ? classes.item1Error \r\n                                      : selected_layer===index ? \r\n                                      classes.item1selected \r\n                                      :classes.item1\r\n                                    }\r\n                                    onClick={() => showdetails(el)}\r\n                                  >\r\n\r\n                                    {el.name}\r\n                                    <Button\r\n                                      size=\"small\"\r\n                                      \r\n                                      onClick={() => handleCloneLayer(el)}\r\n                                      \r\n                                    \r\n                                      style={{color:\"#000\",float:\"right\",position:\"relative\",height:\"20%\",width:\"20%\",maxWidth: \"10%\",minWidth: \"10%\",maxHeight:\"10%\",minHeight:\"10%\",}}\r\n                                      \r\n                                      \r\n                                      \r\n                                      // className={classes.cloneBtn}\r\n                                    >\r\n                                      <FileCopySharpIcon fontSize=\"small\" />\r\n                                    </Button>\r\n                                    {invalidLayerIndices.has(index) &&\r\n                                     \r\n                                      <Button\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                          setSelectedWarnLayer(index);\r\n                                          setTimeout(()=>setSelectedWarnLayer(\"\"),3000)\r\n                                          }}\r\n\r\n                                          style={{color:\"#D00000\",float:\"right\",position:\"relative\",height:\"20%\",width:\"20%\",maxWidth: \"10%\",minWidth: \"10%\",maxHeight:\"10%\",minHeight:\"10%\",}}\r\n\r\n                                          \r\n                                          \r\n                                        // className={classes.errBtn}\r\n                                      >\r\n                                        <WarningIcon  fontSize=\"small\" />\r\n                                      </Button>\r\n                                    }\r\n                                    {\r\n                                      selectedWarnLayer===index &&\r\n                                  <div style={{fontSize:\"60%\",marginTop:\"1px\",marginLeft:\"4%\",fontWeight:\"bold\",color:\"#D00000\",}}>\r\n                                    Warning : highlited layer is wrongly placed \r\n                                  </div>\r\n                                  }\r\n                                  </div>\r\n                                  \r\n                                    \r\n                                </div>\r\n                              );\r\n                            }}\r\n                          </Draggable>\r\n                        );\r\n                      })}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Droppable>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item lg={4} md={4} sm={4} xs={4} className={classes.grid3}>\r\n            <div className={classes.column3}>\r\n              <span style={{fontSize:\"120%\",color:\"#000\"}}>\r\n                {Object.keys(selected_layer_type).length !== 0\r\n                  ? \"name\" in components[selected_layer]\r\n                    ? components[selected_layer].name\r\n                    : null\r\n                  : <div style={{opacity:\"0\"}}>Layer</div> }\r\n              </span>\r\n\r\n              <div className={classes.body3}>\r\n                {Object.keys(selected_layer_type).length === 0 ? (\r\n                  <h3 style={{textAlign:\"center\"}}>please select some layer first</h3>\r\n                ) : (\r\n                  <div className={classes.innerpad}>\r\n                    {Object.keys(components[selected_layer]).map(\r\n                      (key, index) => (\r\n                        <Fragment key={index}>\r\n                          {key === \"name\" ||\r\n                          key === \"id\" ||\r\n                          key === \"type\" ? null : (\r\n                            <div className={classes.batch}>\r\n                              <div className={classes.title}>\r\n                                {\" \"}\r\n                                {key}\r\n                                &nbsp;{\" \"}\r\n                                {selected_layer_type[key]? selected_layer_type[key][\"Required\"] === 1 ? (\r\n                                  <span>*</span>\r\n                                ) : (\r\n                                  <span></span>\r\n                                ):null }\r\n                              </div>\r\n\r\n                              <div\r\n                                className={classes.infoiconLayer}\r\n                                title={\r\n                                  components[selected_layer][key][\"Description\"]\r\n                                }\r\n                              >\r\n                               <HelpOutlineIcon\r\n                                  fontSize=\"small\" \r\n                                  onClick={() => {\r\n                                    setselected_InputFieldDesc(key);\r\n                                    setTimeout(()=> setselected_InputFieldDesc(\"\"),3000);\r\n                                  }}\r\n\r\n\r\n                                 />\r\n                              </div>\r\n                              {components[selected_layer][key][\"Datatype\"] ===\r\n                              \"select\" ? (\r\n                                <div className={classes.value}>\r\n                                  <FormControl\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                  >\r\n                                    <Select\r\n                                      native\r\n                                      value={\r\n                                        components[selected_layer][key][\"value\"]\r\n                                          ? components[selected_layer][key][\r\n                                              \"value\"\r\n                                            ]\r\n                                          : components[selected_layer][key][\r\n                                              \"Default\"\r\n                                            ]\r\n                                      }\r\n                                      onChange={save_value(key)}\r\n                                    >\r\n                                      {components[selected_layer][key][\r\n                                        \"Options\"\r\n                                      ].map((arr, index) => (\r\n                                        <option key={index} value={arr}>\r\n                                          {arr}\r\n                                        </option>\r\n                                      ))}{\" \"}\r\n                                    </Select>\r\n                                    {\r\n                                          selected_InputFieldDesc===key?\r\n                                          <p style={{fontSize:\"80%\",marginTop:\"1px\",fontWeight:\"100\",color:\"#a2a4a8\"}}>\r\n                                          {components[selected_layer][key][\"Description\"]}\r\n                                          </p>\r\n                                          :<p style={{fontSize:\"80%\",marginTop:\"1px\",fontWeight:\"100\",color:\"#a2a4a8\"}}>\r\n                                          Example-{components[selected_layer][key][\"Example\"]}\r\n                                          </p>\r\n                                        }\r\n                                  </FormControl>\r\n                                </div>\r\n                              ) : (\r\n                                <div className={classes.value}>\r\n                                  <TextField\r\n                                    required\r\n                                    style={{color:\"#FFF\"}}\r\n                                    size=\"small\"\r\n                                    value={\r\n                                      components[selected_layer][key][\"value\"]\r\n                                        ? components[selected_layer][key][\r\n                                            \"value\"\r\n                                          ]\r\n                                        : components[selected_layer][key][\r\n                                            \"Default\"\r\n                                          ] === \"NA\"\r\n                                        ? \"\"\r\n                                        : components[selected_layer][key][\r\n                                            \"Default\"\r\n                                          ]\r\n                                    }\r\n                                    variant=\"outlined\"\r\n                                    onChange={save_value(key)}\r\n                                    helperText={\r\n                                      // `Example - ${components[selected_layer][key][\"Example\"]}`\r\n                                      `${\r\n                                          selected_InputFieldDesc===key ?\r\n                                          components[selected_layer][key][\"Description\"]\r\n                                          :`Example-${components[selected_layer][key][\"Example\"]}`\r\n                                        }`\r\n\r\n                                      }\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </Fragment>\r\n                      )\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n\r\n          <div className={classes.delete}>\r\n            <Droppable droppableId=\"delete\">\r\n              {(provided, snapshot) => {\r\n                return (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                    <h3>Drag here to delete the layer</h3>\r\n\r\n                    {provided.placeholder}\r\n                  </div>\r\n                );\r\n              }}\r\n            </Droppable>\r\n          </div>\r\n          <Button\r\n            style={{background:\"#252934\"}}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n\r\n              onClick={()=>{\r\n              setOpenModal(true)\r\n            }}\r\n            className={classes.tryUsBtn}\r\n              \r\n            >\r\n              Generate Code\r\n            </Button>\r\n            \r\n\r\n            {openModal && <TryUsDialog openModal={openModal} closeModal={setOpenModal}  /> }\r\n        </Grid>\r\n      </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default LayerTab;\r\n"," const temp_json = {\r\n    Conv2D: {\r\n      filters: {\r\n        Example: 32,\r\n        Default: \"NA\",\r\n        Required: 1,\r\n        Datatype: \"number\",\r\n        Options: [],\r\n        Description:\r\n          \"the dimensionality of the output space [i.e.the number of output filters in the convolution]\",\r\n      },\r\n\r\n      data_format: {\r\n        Example: \"channels_last\",\r\n        Default: \"channels_last\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"channels_last\", \"channels_first\"],\r\n        Description:\r\n          \"A string, one of channels_last [default] or channels_first.\",\r\n      },\r\n\r\n      kernel_size: {\r\n        Example: [2, 2],\r\n        Default: \"NA\",\r\n        Required: 1,\r\n        Datatype: \"Tuple\",\r\n        Options: [],\r\n        Description:\r\n          \"Specifies the height and width of the 2D convolution window\",\r\n      },\r\n      strides: {\r\n        Example: [1, 1],\r\n        Default: \"1, 1\",\r\n        Required: 0,\r\n        Datatype: \"Tuple\",\r\n        Options: [],\r\n        Description:\r\n          \"Specifies the strides of the convolution along the height and width.\",\r\n      },\r\n\r\n      padding: {\r\n        Example: \"valid\",\r\n        Default: \"valid\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"valid\", \"same\"],\r\n        Description:\r\n          '\"valid\" means no padding. \"same\" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.',\r\n      },\r\n\r\n      kernel_initializer: {\r\n        Example: \"glorot_uniform\",\r\n        Default: \"glorot_uniform\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\r\n          \"random_normal\",\r\n          \"random_uniform\",\r\n          \"truncated_normal\",\r\n          \"truncated_uniform\",\r\n          \"zeros\",\r\n          \"ones\",\r\n          \"glorot_normal\",\r\n          \"glorot_uniform\",\r\n          \"identity\",\r\n        ],\r\n        Description: \"Initializer for the kernel weights matrix\",\r\n      },\r\n      bias_initializer: {\r\n        Example: \"zeros\", \r\n        Default: \"zeros\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\r\n          \"random_normal\",\r\n          \"random_uniform\",\r\n          \"truncated_normal\",\r\n          \"truncated_uniform\",\r\n          \"zeros\",\r\n          \"ones\",\r\n          \"glorot_normal\",\r\n          \"glorot_uniform\",\r\n          \"identity\",\r\n        ],\r\n        Description: \"Initializer for the bias vector\",\r\n      },\r\n    },\r\n\r\n    Dense: {\r\n      units: {\r\n        Example: 32,\r\n        Default: \"NA\",\r\n        Required: 1,\r\n        Datatype: \"number\",\r\n        Options: [],\r\n        Description: \"Positive integer, dimensionality of the output space.\",\r\n      },\r\n\r\n      use_bias: {\r\n        Example: \"True\",\r\n        Default: \"True\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"True\", \"False\"],\r\n        Description: \"Boolean, whether the layer uses a bias vector.\",\r\n      },\r\n      activation: {\r\n        Example: \"relu\",\r\n        Default: \"NA\",\r\n        Required: 1,\r\n        Datatype: \"select\",\r\n        Options: [\r\n          \"relu\",\r\n          \"sigmoid\",\r\n          \"softmax\",\r\n          \"softplus\",\r\n          \"softsign\",\r\n          \"tanh\",\r\n          \"selu\",\r\n          \"elu\",\r\n        ],\r\n        Description: \"Activation function, if required\",\r\n      },\r\n\r\n      kernel_initializer: {\r\n        Example: \"glorot_uniform\",\r\n        Default: \"glorot_uniform\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\r\n          \"random_normal\",\r\n          \"random_uniform\",\r\n          \"truncated_normal\",\r\n          \"truncated_uniform\",\r\n          \"zeros\",\r\n          \"ones\",\r\n          \"glorot_normal\",\r\n          \"glorot_uniform\",\r\n          \"identity\",\r\n        ],\r\n        Description: \"Initializer for the kernel weights matrix\",\r\n      },\r\n\r\n      bias_initializer: {\r\n        Example: \"zeros\",\r\n        Default: \"zeros\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\r\n          \"random_normal\",\r\n          \"random_uniform\",\r\n          \"truncated_normal\",\r\n          \"truncated_uniform\",\r\n          \"zeros\",\r\n          \"ones\",\r\n          \"glorot_normal\",\r\n          \"glorot_uniform\",\r\n          \"identity\",\r\n        ],\r\n        Description: \"Initializer for the bias vector\",\r\n      },\r\n    },\r\n\r\n    LSTM: {\r\n      units: {\r\n        Example: 32,\r\n        Default: \"NA\",\r\n        Required: 1,\r\n        Datatype: \"number\",\r\n        Options: [],\r\n        Description: \"Positive integer, dimensionality of the output space.\",\r\n      },\r\n\r\n      activation: {\r\n        Example: \"tanh\",\r\n        Default: \"tanh\",\r\n        Required: 1,\r\n        Datatype: \"select\",\r\n        Options: [\r\n          \"relu\",\r\n          \"sigmoid\",\r\n          \"softmax\",\r\n          \"softplus\",\r\n          \"softsign\",\r\n          \"tanh\",\r\n          \"selu\",\r\n          \"None\",\r\n          \"elu\",\r\n        ],\r\n        Description:\r\n          'Activation function to use. Default: hyperbolic tangent [tanh]. If you pass None, no activation is applied [ie. \"linear \" activation: a[x] = x]',\r\n      },\r\n\r\n      recurrent_activation: {\r\n        Example: \"sigmoid\",\r\n        Default: \"sigmoid\",\r\n        Required: 1,\r\n        Datatype: \"select\",\r\n        Options: [\r\n          \"relu\",\r\n          \"sigmoid\",\r\n          \"softmax\",\r\n          \"softplus\",\r\n          \"softsign\",\r\n          \"tanh\",\r\n          \"selu\",\r\n          \"None\",\r\n          \"elu\",\r\n        ],\r\n        Description:\r\n          'Activation function to use for the recurrent step. Default: sigmoid [sigmoid]. If you pass None, no activation is applied [ie. \"linear \" activation: a[x] = x].',\r\n      },\r\n\r\n      kernel_initializer: {\r\n        Example: \"glorot_uniform\",\r\n        Default: \"glorot_uniform\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\r\n          \"random_normal\",\r\n          \"random_uniform\",\r\n          \"truncated_normal\",\r\n          \"truncated_uniform\",\r\n          \"zeros\",\r\n          \"ones\",\r\n          \"glorot_normal\",\r\n          \"glorot_uniform\",\r\n          \"identity\",\r\n        ],\r\n        Description: \"Initializer for the kernel weights matrix\",\r\n      },\r\n\r\n      bias_initializer: {\r\n        \"Example \": \"zeros \",\r\n        Default: \"zeros\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\r\n          \"random_normal\",\r\n          \"random_uniform\",\r\n          \"truncated_normal\",\r\n          \"truncated_uniform\",\r\n          \"zeros\",\r\n          \"ones\",\r\n          \"glorot_normal\",\r\n          \"glorot_uniform\",\r\n          \"identity\",\r\n        ],\r\n        Description: \"Initializer for the bias vector\",\r\n      },\r\n\r\n      dropout: {\r\n        Default: 0,\r\n        Example: 0.4,\r\n        Required: 0,\r\n        Datatype: \"number\",\r\n        Options: [],\r\n        Description:\r\n          \"Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0.\",\r\n      },\r\n\r\n      return_sequences: {\r\n        Default: \"False\",\r\n        Example: \"True\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"True\", \"False\"],\r\n        Description:\r\n          \"Boolean. Whether to return the last output. in the output sequence, or the full sequence. Default: False\",\r\n      },\r\n\r\n      return_state: {\r\n        Default: \"False\",\r\n        Example: \"True\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"True\", \"False\"],\r\n        Description:\r\n          \"Boolean. Whether to return the last state in addition to the output. Default: False.\",\r\n      },\r\n    },\r\n\r\n    SimpleRNN: {\r\n      units: {\r\n        Example: 32,\r\n        Default: \"NA\",\r\n        Required: 1,\r\n        Datatype: \"number\",\r\n        Options: [],\r\n        Description: \"Positive integer, dimensionality of the output space.\",\r\n      },\r\n\r\n      activation: {\r\n        Example: \"tanh\",\r\n        Default: \"tanh\",\r\n        Required: 1,\r\n        Datatype: \"select\",\r\n        Options: [\r\n          \"relu\",\r\n          \"sigmoid\",\r\n          \"softmax\",\r\n          \"softplus\",\r\n          \"softsign\",\r\n          \"tanh\",\r\n          \"selu\",\r\n          \"None\",\r\n          \"elu\",\r\n        ],\r\n        Description:\r\n          'Activation function to use. Default: hyperbolic tangent [tanh]. If you pass None, no activation is applied [ie. \"linear \" activation: a[x] = x]',\r\n      },\r\n\r\n      use_bias: {\r\n        Example: \"True\",\r\n        Default: \"True\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"True\", \"False\"],\r\n        Description: \"Boolean, whether the layer uses a bias vector.\",\r\n      },\r\n      dropout: {\r\n        Default: 0,\r\n        Example: 0.4,\r\n        Required: 0,\r\n        Datatype: \"number\",\r\n        Options: [],\r\n        Description:\r\n          \"Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0.\",\r\n      },\r\n    },\r\n\r\n    Dropout: {\r\n      rate: {\r\n        Default: \"NA\",\r\n        Example: 0.4,\r\n        Required: 1,\r\n        Datatype: \"float\",\r\n        Options: [],\r\n        Description:\r\n          \"Float between 0 and 1. Fraction of the input units to drop.\",\r\n      },\r\n\r\n      noise_shape: {\r\n        Default: \"None\",\r\n        Example: \"[batch_size, 1, features]\",\r\n        Required: 0,\r\n        Datatype: \"Tuple\",\r\n        Options: [],\r\n        Description:\r\n          \"1D integer tensor representing the shape of the binary dropout mask that will be multiplied with the input. For instance, if your inputs have shape [batch_size, timesteps, features] and you want the dropout mask to be the same for all timesteps, you can use noise_shape=[batch_size, 1, features]\",\r\n      },\r\n\r\n      seed: {\r\n        Default: \"NA\",\r\n        Example: 42,\r\n        Required: 0,\r\n        Datatype: \"number\",\r\n        Options: [],\r\n        Description: \"A Python integer to use as random seed\",\r\n      },\r\n    },\r\n\r\n    Flatten: {\r\n      data_format: {\r\n        Example: \"channels_last\",\r\n        Default: \"channels_last\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"channels_last\", \"channels_first\"],\r\n        Description:\r\n          \"A string, one of channels_last [default] or channels_first.\",\r\n      },\r\n    },\r\n\r\n    ZeroPadding2D: {\r\n      padding: {\r\n        Example: [\r\n          [1, 1],\r\n          [2, 2],\r\n        ],\r\n        Default: \"NA\",\r\n        Required: 1,\r\n        Datatype: \"Tuple\",\r\n        Options: [],\r\n        Description:\r\n          \"The Tuple interpreted as [[top_pad, bottom_pad], [left_pad, right_pad]]\",\r\n      },\r\n\r\n      data_format: {\r\n        Example: \"channels_last\",\r\n        Default: \"channels_last\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"channels_last\", \"channels_first\"],\r\n        Description:\r\n          \"A string, one of channels_last [default] or channels_first.\",\r\n      },\r\n    },\r\n\r\n    AveragePooling2D: {\r\n      pool_size: {\r\n        Example: [2, 2],\r\n        Default: \"NA\",\r\n        Required: 1,\r\n        Datatype: \"Tuple\",\r\n        Options: [],\r\n        Description:\r\n          \"integer or Tuple of 2 integers, factors by which to downscale [vertical, horizontal]. [2, 2] will halve the input in both spatial dimension. If only one integer is specified, the same window length will be used for both dimensions\",\r\n      },\r\n\r\n      strides: {\r\n        Example: [2, 2],\r\n        Default: \"NA\",\r\n        Required: 0,\r\n        Datatype: \"Tuple\",\r\n        Options: [],\r\n        Description:\r\n          \"Tuple of 2 integers, or None. Strides values. If None, it will default to pool_size.\",\r\n      },\r\n\r\n      data_format: {\r\n        Example: \"channels_last\",\r\n        Default: \"channels_last\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"channels_last\", \"channels_first\"],\r\n        Description:\r\n          \"A string, one of channels_last [default] or channels_first.\",\r\n      },\r\n\r\n      padding: {\r\n        Example: \"valid\",\r\n        Default: \"valid\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"valid\", \"same\"],\r\n        Description:\r\n          '\"valid\" means no padding. \"same\" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.',\r\n      },\r\n    },\r\n\r\n    MaxPooling2D: {\r\n      pool_size: {\r\n        Example: [2, 2],\r\n        Default: \"NA\",\r\n        Required: 1,\r\n        Datatype: \"Tuple\",\r\n        Options: [],\r\n        Description:\r\n          \"integer or Tuple of 2 integers, factors by which to downscale [vertical, horizontal]. [2, 2] will halve the input in both spatial dimensions. If only one integer is specified, the same window length will be used for both dimensions\",\r\n      },\r\n\r\n      strides: {\r\n        Example: [2, 2],\r\n        Default: \"NA\",\r\n        Required: 0,\r\n        Datatype: \"Tuple\",\r\n        Options: [],\r\n        Description:\r\n          \"Tuple of 2 integers, or None. Strides values. If None, it will default to pool_size.\",\r\n      },\r\n\r\n      data_format: {\r\n        Example: \"channels_last\",\r\n        Default: \"channels_last\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"channels_last\", \"channels_first\"],\r\n        Description:\r\n          \"A string, one of channels_last [default] or channels_first.\",\r\n      },\r\n\r\n      padding: {\r\n        Example: \"valid\",\r\n        Default: \"valid\",\r\n        Required: 0,\r\n        Datatype: \"select\",\r\n        Options: [\"valid\", \"same\"],\r\n        Description:\r\n          '\"valid\" means no padding. \"same\" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.',\r\n      },\r\n    },\r\n  };\r\n\r\n  export default temp_json;","export const keras_layers = {\r\n    Conv2D: {\r\n      parameters: {\r\n        filters: {\r\n          Example: 32,\r\n          Default: \"NA\",\r\n          Required: 1,\r\n          Datatype: \"number\",\r\n          Options: [],\r\n          Description:\r\n            \"the dimensionality of the output space [i.e.the number of output filters in the convolution]\",\r\n        },\r\n  \r\n        data_format: {\r\n          Example: \"channels_last\",\r\n          Default: \"channels_last\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"channels_last\", \"channels_first\"],\r\n          Description:\r\n            \"A string, one of channels_last [default] or channels_first.\",\r\n        },\r\n  \r\n        kernel_size: {\r\n          Example: [2, 2],\r\n          Default: \"NA\",\r\n          Required: 1,\r\n          Datatype: \"Tuple\",\r\n          Options: [],\r\n          Description:\r\n            \"Specifies the height and width of the 2D convolution window\",\r\n        },\r\n        strides: {\r\n          Example: [1, 1],\r\n          Default: \"1, 1\",\r\n          Required: 0,\r\n          Datatype: \"Tuple\",\r\n          Options: [],\r\n          Description:\r\n            \"Specifies the strides of the convolution along the height and width.\",\r\n        },\r\n  \r\n        padding: {\r\n          Example: \"valid\",\r\n          Default: \"valid\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"valid\", \"same\"],\r\n          Description:\r\n            '\"valid\" means no padding. \"same\" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.',\r\n        },\r\n  \r\n        kernel_initializer: {\r\n          Example: \"glorot_uniform\",\r\n          Default: \"glorot_uniform\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\r\n            \"random_normal\",\r\n            \"random_uniform\",\r\n            \"truncated_normal\",\r\n            \"truncated_uniform\",\r\n            \"zeros\",\r\n            \"ones\",\r\n            \"glorot_normal\",\r\n            \"glorot_uniform\",\r\n            \"identity\",\r\n          ],\r\n          Description: \"Initializer for the kernel weights matrix\",\r\n        },\r\n        bias_initializer: {\r\n          \"Example \": \"zeros\",\r\n          Default: \"zeros\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\r\n            \"random_normal\",\r\n            \"random_uniform\",\r\n            \"truncated_normal\",\r\n            \"truncated_uniform\",\r\n            \"zeros\",\r\n            \"ones\",\r\n            \"glorot_normal\",\r\n            \"glorot_uniform\",\r\n            \"identity\",\r\n          ],\r\n          Description: \"Initializer for the bias vector\",\r\n        },\r\n      },\r\n      dimensions: {\r\n        expected_dim: 3,\r\n        returned_dim: 3,\r\n      },\r\n      config: {},\r\n    },\r\n  \r\n    Dense: {\r\n      parameters: {\r\n        units: {\r\n          Example: 32,\r\n          Default: \"NA\",\r\n          Required: 1,\r\n          Datatype: \"number\",\r\n          Options: [],\r\n          Description: \"Positive integer, dimensionality of the output space.\",\r\n        },\r\n  \r\n        use_bias: {\r\n          Example: \"True\",\r\n          Default: \"True\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"True\", \"False\"],\r\n          Description: \"Boolean, whether the layer uses a bias vector.\",\r\n        },\r\n        activation: {\r\n          Example: \"relu\",\r\n          Default: \"NA\",\r\n          Required: 1,\r\n          Datatype: \"select\",\r\n          Options: [\r\n            \"relu\",\r\n            \"sigmoid\",\r\n            \"softmax\",\r\n            \"softplus\",\r\n            \"softsign\",\r\n            \"tanh\",\r\n            \"selu\",\r\n            \"elu\",\r\n          ],\r\n          Description: \"Activation function, if required\",\r\n        },\r\n  \r\n        kernel_initializer: {\r\n          Example: \"glorot_uniform\",\r\n          Default: \"glorot_uniform\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\r\n            \"random_normal\",\r\n            \"random_uniform\",\r\n            \"truncated_normal\",\r\n            \"truncated_uniform\",\r\n            \"zeros\",\r\n            \"ones\",\r\n            \"glorot_normal\",\r\n            \"glorot_uniform\",\r\n            \"identity\",\r\n          ],\r\n          Description: \"Initializer for the kernel weights matrix\",\r\n        },\r\n  \r\n        bias_initializer: {\r\n          Example: \"zeros\",\r\n          Default: \"zeros\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\r\n            \"random_normal\",\r\n            \"random_uniform\",\r\n            \"truncated_normal\",\r\n            \"truncated_uniform\",\r\n            \"zeros\",\r\n            \"ones\",\r\n            \"glorot_normal\",\r\n            \"glorot_uniform\",\r\n            \"identity\",\r\n          ],\r\n          Description: \"Initializer for the bias vector\",\r\n        },\r\n      },\r\n      dimensions: {\r\n        expected_dim: 1,\r\n        returned_dim: 1,\r\n      },\r\n      config: {},\r\n    },\r\n  \r\n    LSTM: {\r\n      parameters: {\r\n        units: {\r\n          Example: 32,\r\n          Default: \"NA\",\r\n          Required: 1,\r\n          Datatype: \"number\",\r\n          Options: [],\r\n          Description: \"Positive integer, dimensionality of the output space.\",\r\n        },\r\n  \r\n        activation: {\r\n          Example: \"tanh\",\r\n          Default: \"tanh\",\r\n          Required: 1,\r\n          Datatype: \"select\",\r\n          Options: [\r\n            \"relu\",\r\n            \"sigmoid\",\r\n            \"softmax\",\r\n            \"softplus\",\r\n            \"softsign\",\r\n            \"tanh\",\r\n            \"selu\",\r\n            \"None\",\r\n            \"elu\",\r\n          ],\r\n          Description:\r\n            'Activation function to use. Default: hyperbolic tangent [tanh]. If you pass None, no activation is applied [ie. \"linear \" activation: a[x] = x]',\r\n        },\r\n  \r\n        recurrent_activation: {\r\n          Example: \"sigmoid\",\r\n          Default: \"sigmoid\",\r\n          Required: 1,\r\n          Datatype: \"select\",\r\n          Options: [\r\n            \"relu\",\r\n            \"sigmoid\",\r\n            \"softmax\",\r\n            \"softplus\",\r\n            \"softsign\",\r\n            \"tanh\",\r\n            \"selu\",\r\n            \"None\",\r\n            \"elu\",\r\n          ],\r\n          Description:\r\n            'Activation function to use for the recurrent step. Default: sigmoid [sigmoid]. If you pass None, no activation is applied [ie. \"linear \" activation: a[x] = x].',\r\n        },\r\n  \r\n        kernel_initializer: {\r\n          Example: \"glorot_uniform\",\r\n          Default: \"glorot_uniform\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\r\n            \"random_normal\",\r\n            \"random_uniform\",\r\n            \"truncated_normal\",\r\n            \"truncated_uniform\",\r\n            \"zeros\",\r\n            \"ones\",\r\n            \"glorot_normal\",\r\n            \"glorot_uniform\",\r\n            \"identity\",\r\n          ],\r\n          Description: \"Initializer for the kernel weights matrix\",\r\n        },\r\n  \r\n        bias_initializer: {\r\n          \"Example \": \"zeros \",\r\n          Default: \"zeros\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\r\n            \"random_normal\",\r\n            \"random_uniform\",\r\n            \"truncated_normal\",\r\n            \"truncated_uniform\",\r\n            \"zeros\",\r\n            \"ones\",\r\n            \"glorot_normal\",\r\n            \"glorot_uniform\",\r\n            \"identity\",\r\n          ],\r\n          Description: \"Initializer for the bias vector\",\r\n        },\r\n  \r\n        dropout: {\r\n          Default: 0,\r\n          Example: 0.4,\r\n          Required: 0,\r\n          Datatype: \"number\",\r\n          Options: [],\r\n          Description:\r\n            \"Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0.\",\r\n        },\r\n  \r\n        return_sequences: {\r\n          Default: \"False\",\r\n          Example: \"True\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"True\", \"False\"],\r\n          Description:\r\n            \"Boolean. Whether to return the last output. in the output sequence, or the full sequence. Default: False\",\r\n        },\r\n  \r\n        return_state: {\r\n          Default: \"False\",\r\n          Example: \"True\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"True\", \"False\"],\r\n          Description:\r\n            \"Boolean. Whether to return the last state in addition to the output. Default: False.\",\r\n        },\r\n      },\r\n      dimensions: {\r\n        expected_dim: 2,\r\n        returned_dim: 2,\r\n      },\r\n      config: {},\r\n    },\r\n  \r\n    SimpleRNN: {\r\n      parameters: {\r\n        units: {\r\n          Example: 32,\r\n          Default: \"NA\",\r\n          Required: 1,\r\n          Datatype: \"number\",\r\n          Options: [],\r\n          Description: \"Positive integer, dimensionality of the output space.\",\r\n        },\r\n  \r\n        activation: {\r\n          Example: \"tanh\",\r\n          Default: \"tanh\",\r\n          Required: 1,\r\n          Datatype: \"select\",\r\n          Options: [\r\n            \"relu\",\r\n            \"sigmoid\",\r\n            \"softmax\",\r\n            \"softplus\",\r\n            \"softsign\",\r\n            \"tanh\",\r\n            \"selu\",\r\n            \"None\",\r\n            \"elu\",\r\n          ],\r\n          Description:\r\n            'Activation function to use. Default: hyperbolic tangent [tanh]. If you pass None, no activation is applied [ie. \"linear \" activation: a[x] = x]',\r\n        },\r\n  \r\n        use_bias: {\r\n          Example: \"True\",\r\n          Default: \"True\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"True\", \"False\"],\r\n          Description: \"Boolean, whether the layer uses a bias vector.\",\r\n        },\r\n        dropout: {\r\n          Default: 0,\r\n          Example: 0.4,\r\n          Required: 0,\r\n          Datatype: \"number\",\r\n          Options: [],\r\n          Description:\r\n            \"Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0.\",\r\n        },\r\n      },\r\n      dimensions: {\r\n        expected_dim: 1,\r\n        returned_dim: 1,\r\n      },\r\n      config: {},\r\n    },\r\n  \r\n    Dropout: {\r\n      parameters: {\r\n        rate: {\r\n          Default: \"NA\",\r\n          Example: 0.4,\r\n          Required: 1,\r\n          Datatype: \"float\",\r\n          Options: [],\r\n          Description:\r\n            \"Float between 0 and 1. Fraction of the input units to drop.\",\r\n        },\r\n  \r\n        noise_shape: {\r\n          Default: \"None\",\r\n          Example: \"[batch_size, 1, features]\",\r\n          Required: 0,\r\n          Datatype: \"Tuple\",\r\n          Options: [],\r\n          Description:\r\n            \"1D integer tensor representing the shape of the binary dropout mask that will be multiplied with the input. For instance, if your inputs have shape [batch_size, timesteps, features] and you want the dropout mask to be the same for all timesteps, you can use noise_shape=[batch_size, 1, features]\",\r\n        },\r\n  \r\n        seed: {\r\n          Default: \"NA\",\r\n          Example: 42,\r\n          Required: 0,\r\n          Datatype: \"number\",\r\n          Options: [],\r\n          Description: \"A Python integer to use as random seed\",\r\n        },\r\n      },\r\n      dimensions: {\r\n        expected_dim: \"all\",\r\n        returned_dim: \"same\",\r\n      },\r\n      config: {},\r\n    },\r\n  \r\n    Flatten: {\r\n      parameters: {\r\n        data_format: {\r\n          Example: \"channels_last\",\r\n          Default: \"channels_last\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"channels_last\", \"channels_first\"],\r\n          Description:\r\n            \"A string, one of channels_last [default] or channels_first.\",\r\n        },\r\n      },\r\n      dimensions: {\r\n        expected_dim: \"all\",\r\n        returned_dim: 1,\r\n      },\r\n      config: {},\r\n    },\r\n  \r\n    ZeroPadding2D: {\r\n      parameters: {\r\n        padding: {\r\n          Example: [\r\n            [1, 1],\r\n            [2, 2],\r\n          ],\r\n          Default: \"NA\",\r\n          Required: 1,\r\n          Datatype: \"Tuple\",\r\n          Options: [],\r\n          Description:\r\n            \"The Tuple interpreted as [[top_pad, bottom_pad], [left_pad, right_pad]]\",\r\n        },\r\n  \r\n        data_format: {\r\n          Example: \"channels_last\",\r\n          Default: \"channels_last\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"channels_last\", \"channels_first\"],\r\n          Description:\r\n            \"A string, one of channels_last [default] or channels_first.\",\r\n        },\r\n      },\r\n      dimensions: {\r\n        expected_dim: 3,\r\n        returned_dim: 3,\r\n      },\r\n      config: {},\r\n    },\r\n  \r\n    AveragePooling2D: {\r\n      parameters: {\r\n        pool_size: {\r\n          Example: [2, 2],\r\n          Default: \"NA\",\r\n          Required: 1,\r\n          Datatype: \"Tuple\",\r\n          Options: [],\r\n          Description:\r\n            \"integer or Tuple of 2 integers, factors by which to downscale [vertical, horizontal]. [2, 2] will halve the input in both spatial dimension. If only one integer is specified, the same window length will be used for both dimensions\",\r\n        },\r\n  \r\n        strides: {\r\n          Example: [2, 2],\r\n          Default: \"NA\",\r\n          Required: 0,\r\n          Datatype: \"Tuple\",\r\n          Options: [],\r\n          Description:\r\n            \"Tuple of 2 integers, or None. Strides values. If None, it will default to pool_size.\",\r\n        },\r\n  \r\n        data_format: {\r\n          Example: \"channels_last\",\r\n          Default: \"channels_last\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"channels_last\", \"channels_first\"],\r\n          Description:\r\n            \"A string, one of channels_last [default] or channels_first.\",\r\n        },\r\n  \r\n        padding: {\r\n          Example: \"valid\",\r\n          Default: \"valid\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"valid\", \"same\"],\r\n          Description:\r\n            '\"valid\" means no padding. \"same\" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.',\r\n        },\r\n      },\r\n      dimensions: {\r\n        expected_dim: 3,\r\n        returned_dim: 3,\r\n      },\r\n      config: {},\r\n    },\r\n  \r\n    MaxPooling2D: {\r\n      parameters: {\r\n        pool_size: {\r\n          Example: [2, 2],\r\n          Default: \"NA\",\r\n          Required: 1,\r\n          Datatype: \"Tuple\",\r\n          Options: [],\r\n          Description:\r\n            \"integer or Tuple of 2 integers, factors by which to downscale [vertical, horizontal]. [2, 2] will halve the input in both spatial dimensions. If only one integer is specified, the same window length will be used for both dimensions\",\r\n        },\r\n  \r\n        strides: {\r\n          Example: [2, 2],\r\n          Default: \"NA\",\r\n          Required: 0,\r\n          Datatype: \"Tuple\",\r\n          Options: [],\r\n          Description:\r\n            \"Tuple of 2 integers, or None. Strides values. If None, it will default to pool_size.\",\r\n        },\r\n  \r\n        data_format: {\r\n          Example: \"channels_last\",\r\n          Default: \"channels_last\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"channels_last\", \"channels_first\"],\r\n          Description:\r\n            \"A string, one of channels_last [default] or channels_first.\",\r\n        },\r\n  \r\n        padding: {\r\n          Example: \"valid\",\r\n          Default: \"valid\",\r\n          Required: 0,\r\n          Datatype: \"select\",\r\n          Options: [\"valid\", \"same\"],\r\n          Description:\r\n            '\"valid\" means no padding. \"same\" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.',\r\n        },\r\n      },\r\n      dimensions: {\r\n        expected_dim: 3,\r\n        returned_dim: 3,\r\n      },\r\n      config: {},\r\n    },\r\n  };\r\n  ","import { useState } from 'react';\r\nimport './App.css';\r\nimport LayerTab from './components/LayerTab';\r\nimport jsondata from \"./assets/KerasLayersJson\";\r\nimport _ from \"lodash\";\r\nimport {validate_layers} from \"./Validation/Validation\";\r\n\r\nimport { useStyles } from \"./assets/stylesGrey\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [components, setcomponents] = useState([]);\r\n  const [selected_layer_type, setselected_layer_type] = useState(\"\");\r\n  const [selected_layer, setselected_layer] = useState(-1);\r\n  const [invalidLayerIndices,setInvalidLayerIndices]=useState(new Set());\r\n  const [validLayerIndices,setValidLayerIndices]=useState([0,1,2,3,4,5,6,7,8,9]);\r\n\r\n  const save_value = (prop) => (event) => {\r\n    var param = prop;\r\n    var index = selected_layer;\r\n    const pervstate = Object.assign([], components);\r\n    pervstate[index][param][\"value\"] = event.target.value;\r\n    console.log(\"prop is \", prop);\r\n    console.log(event.target.value);\r\n    console.log(components);\r\n    setcomponents(pervstate);\r\n  };\r\n\r\n  const handleCloneLayer = (layer) => {\r\n    // handleChangetabs();\r\n    \r\n      //getting source names of all layers \r\n        const list_names_of_source=Object.keys(jsondata);\r\n        let source_index;\r\n\r\n        //where to place layer in UI\r\n        let destination_index=Number(layer.id[layer.id.length-1])+1;\r\n        // console.log(\"destination index  is \",destination_index);\r\n        \r\n\r\n    \r\n        //finding layer in source array for id framing\r\n        for(let i=0;i<list_names_of_source.length;i++)\r\n        {\r\n          if(layer.name === list_names_of_source[i] )\r\n          {\r\n            source_index=i;\r\n            break;\r\n          }\r\n        }\r\n\r\n    \r\n    //cloning the layer\r\n    let clonedLayer = _.cloneDeep(layer);\r\n\r\n    //assigning new id and name\r\n    clonedLayer[\"id\"] = `${layer.name}-${source_index}-${destination_index}`;\r\n    clonedLayer[\"name\"] = list_names_of_source[source_index];\r\n\r\n    //inserting layer just below the layer to be cloned\r\n    components.splice(destination_index, 0, clonedLayer);\r\n\r\n    for (let i = 0; i < components.length; i++) {\r\n      components[i][\"id\"] = components[i][\"id\"] + i;\r\n      if (i === 0) {\r\n        if (\r\n          !(\"input_size\" in components[i]) ||\r\n          !(\"input_shape\" in components[i])\r\n        ) {\r\n          components[i][\"input_shape\"] = {\r\n            Example: [200, 200, 3],\r\n            Default: \"NA\",\r\n            Required: 1,\r\n            Datatype: \"Tuple\",\r\n            Options: [],\r\n            Description: \"Input shape for the first layer\",\r\n          };\r\n        }\r\n      } else {\r\n        try {\r\n          delete components[i][\"input_shape\"];\r\n        } catch (err) {}\r\n      }\r\n      // console.log(\"inside loop id\",components[i][\"id\"]);\r\n    }\r\n    let some_dic = _.cloneDeep(components);\r\n    setcomponents(some_dic);\r\n  };\r\n\r\n\r\n  const showdetails = (element) => {\r\n    setselected_layer_type(element);\r\n    console.log(\"selected layer type is \",selected_layer_type);\r\n\r\n    var ele = components;\r\n    var index = ele.lastIndexOf(element);\r\n    console.log(\"index is \",index);\r\n\r\n    setselected_layer(index);\r\n  };\r\n\r\n\r\n\r\n  const handleDragEnd = ({ destination, source }) => {\r\n    let tempArr=_.cloneDeep(components);\r\n    console.log(\"components before\",components);\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.index === source.index &&\r\n      destination.droppableId === source.droppableId\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (destination.droppableId === \"source\") {\r\n      console.log(\"dropping in  source\",tempArr);\r\n      return;\r\n    }\r\n    \r\n    if (\r\n      destination.droppableId === \"delete\" &&\r\n      source.droppableId === \"target\"\r\n    ) {\r\n      console.log(\"deleting from target\");\r\n      const element = tempArr[source.index];\r\n      \r\n      \r\n      var temp = tempArr.filter((item) => item !== element);\r\n      tempArr=temp;\r\n      \r\n    \r\n      setselected_layer(-1);\r\n      setselected_layer_type(\"\");\r\n      \r\n    }\r\n    if (\r\n      destination.droppableId === \"target\" &&\r\n      source.droppableId === \"target\"\r\n    ) {\r\n\r\n      let dragLayerIsSelcted=false;\r\n      console.log('tempArr[\"id\"] selected_layer_type[\"id\"]',tempArr[source.index][\"id\"],selected_layer_type[\"id\"]);\r\n\r\n      if(tempArr[source.index][\"id\"]===selected_layer_type[\"id\"]){\r\n\r\n        dragLayerIsSelcted=true;\r\n      }\r\n     \r\n      \r\n\r\n\r\n      tempArr.splice(destination.index,0,tempArr.splice(source.index, 1)[0]);\r\n      // console.log(\"source and des index are\",source.index,destination.index);\r\n\r\n      if(dragLayerIsSelcted)\r\n      {\r\n        setselected_layer_type(tempArr[destination.index]);\r\n        setselected_layer(destination.index);\r\n        console.log(\"selected_layer_type on drag and id is  \",selected_layer_type,selected_layer_type[\"id\"]); \r\n      }\r\n      else\r\n      {\r\n        setselected_layer_type(\"\");\r\n        setselected_layer(-1);\r\n\r\n      }\r\n\r\n      // console.log(\"compinents after splice is \",components);\r\n      for (var i = 0; i < tempArr.length; i++) {\r\n        tempArr[i][\"id\"] = tempArr[i][\"id\"] + i;\r\n        if (i === 0) {\r\n          if (\r\n            !(\"input_size\" in tempArr[i]) ||\r\n            !(\"input_shape\" in tempArr[i])\r\n          ) {\r\n            tempArr[i][\"input_shape\"] = {\r\n              Example: [200, 200, 3],\r\n              Default: \"NA\",\r\n              Required: 1,\r\n              Datatype: \"Tuple\",\r\n              Options: [],\r\n              Description: \"Input shape for the first layer\",\r\n            };\r\n          }\r\n        } else {\r\n          try {\r\n            delete tempArr[i][\"input_shape\"];\r\n          } catch (err) {}\r\n        }\r\n      }\r\n      // setcomponents(components);\r\n    }\r\n    if (\r\n      destination.droppableId === \"target\" &&\r\n      source.droppableId === \"source\"\r\n    ) {\r\n      console.log(\"dropping from source to target\");\r\n\r\n\r\n      const list_names_of_source = Object.keys(jsondata);\r\n      \r\n      const temp = jsondata[list_names_of_source[source.index]];\r\n      \r\n      var dic = _.cloneDeep(temp);\r\n     \r\n\r\n      \r\n      dic[\"id\"] = `${list_names_of_source[source.index]}-${source.index}-${\r\n        destination.index\r\n      }`;\r\n      \r\n      dic[\"name\"] = list_names_of_source[source.index];\r\n\r\n     \r\n      tempArr.splice(destination.index, 0, dic);\r\n\r\n      for (i = 0; i < tempArr.length; i++) {\r\n        tempArr[i][\"id\"] = tempArr[i][\"id\"] + i;\r\n        \r\n        if (i === 0) {\r\n          if (\r\n            !(\"input_size\" in tempArr[i]) ||\r\n            !(\"input_shape\" in tempArr[i])\r\n          ) {\r\n            tempArr[i][\"input_shape\"] = {\r\n              Example: [200, 200, 3],\r\n              Default: \"NA\",\r\n              Required: 1,\r\n              Datatype: \"Tuple\",\r\n              Options: [],\r\n              Description: \"Input shape for the first layer\",\r\n            };\r\n          }\r\n        } else {\r\n          try {\r\n            delete tempArr[i][\"input_shape\"];\r\n          } catch (err) {}\r\n        }\r\n      }\r\n\r\n    }\r\n    \r\n \r\n\r\n    \r\n    const {invalidIndices,validIndices}=validate_layers( tempArr);\r\n    console.log(\"val res is\",invalidIndices,validIndices);\r\n    setInvalidLayerIndices(invalidIndices);\r\n    setValidLayerIndices(validIndices);\r\n\r\n    setcomponents(tempArr);\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.layerBody}>\r\n    <LayerTab\r\n        \r\n        handleDragEnd={handleDragEnd}\r\n        jsondata={jsondata}\r\n        components={components}\r\n        selected_layer={selected_layer}\r\n        selected_layer_type={selected_layer_type}\r\n        showdetails={showdetails}\r\n        handleCloneLayer={handleCloneLayer}\r\n        invalidLayerIndices={invalidLayerIndices}\r\n        validLayerIndices={validLayerIndices}\r\n        save_value={save_value}\r\n        \r\n    />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { keras_layers } from \"../Keras/KerasLayersForValidation\";\r\n\r\n/**\r\n * Validate order of layers such that dimensions of consecutive layers are not conflicting\r\n * @function validate_layers\r\n * @param {Object} source source object in the handleDragEnd function\r\n * @param {Object} destination destination object in the handleDragEnd function\r\n * @param {List} components List of json objects representing the model layers\r\n * @returns {Array of objects} [] if no errors, [ {indices: [int,int], error: 'error message'}, {..}, .. ] if error\r\n */\r\nexport const validate_layers = ( components) => {\r\n    let errors=new Set();\r\n    let validIndices=[];\r\n    console.log(\"compo valid\",components);\r\n\r\n\r\n    const suggestLayers = (curr_layer) =>{\r\n\r\n        let i=0;\r\n        const indices=[];\r\n        for(const layer in keras_layers)\r\n        { \r\n          if( keras_layers[curr_layer].dimensions.returned_dim === keras_layers[layer].dimensions.expected_dim\r\n             || keras_layers[layer].dimensions.expected_dim===\"all\")\r\n          {\r\n            // console.log(\"layers\",layer);\r\n            indices.push(i);\r\n          }\r\n          i++;\r\n        }\r\n    \r\n        return indices;\r\n    \r\n      }\r\n\r\n    if(components.length>0)\r\n    {\r\n      const curr_layer=components[components.length-1].name;\r\n      validIndices=suggestLayers(curr_layer);\r\n    }\r\n    else {\r\n      validIndices=[0,1,2,3,4,5,6,7,8,9];\r\n    }\r\n\r\n\r\n\r\n    if(components.length !==1)\r\n    {\r\n        \r\n        for(let i=1;i<components.length;i++)\r\n        {\r\n            if(keras_layers[components[i][\"name\"]].dimensions.expected_dim !== \"all\" &&\r\n            keras_layers[components[i-1][\"name\"]].dimensions.returned_dim !==\r\n            keras_layers[components[i][\"name\"]].dimensions.expected_dim)\r\n            {\r\n                errors.add(i);\r\n            }\r\n                        \r\n        }\r\n    }\r\n    console.log(\"components are and error are\",components,errors);\r\n\r\n    const validAndInvalid={\r\n        invalidIndices : errors,\r\n        validIndices : validIndices\r\n    \r\n      }\r\n      return validAndInvalid; \r\n\r\n\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode >\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}