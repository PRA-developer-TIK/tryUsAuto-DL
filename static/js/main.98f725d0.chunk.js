(this.webpackJsonpmodellayers=this.webpackJsonpmodellayers||[]).push([[0],{83:function(e,t,i){},84:function(e,t,i){},95:function(e,t,i){"use strict";i.r(t);var n=i(0),a=i.n(n),o=i(10),r=i.n(o),s=(i(83),i(11)),l=(i(84),i(12)),d=i(139),p=i(140),c=i(143),u=i(145),m=i(23),f=i(31),h=i(2),g=i(97),x=i(133),D=i(132),b=i(134),_=i(135),y=i(5),O=i(136),v=i(62),j=i.n(v),w=i(3),R=["children","classes","onClose"],E=Object(y.a)((function(e){return{root:{margin:0,padding:e.spacing(2)},closeButton:{position:"absolute",right:e.spacing(1),top:e.spacing(1),color:e.palette.grey[500]}}}))((function(e){var t=e.children,i=e.classes,n=e.onClose,a=Object(h.a)(e,R);return Object(w.jsxs)(D.a,Object(l.a)(Object(l.a)({disableTypography:!0,className:i.root},a),{},{children:[Object(w.jsx)(g.a,{component:"span",variant:"h6",children:t}),n?Object(w.jsx)(x.a,{"aria-label":"close",className:i.closeButton,onClick:n,children:Object(w.jsx)(j.a,{})}):null]}))})),z=Object(y.a)((function(e){return{root:{padding:e.spacing(2)}}}))(b.a),q=Object(y.a)((function(e){return{root:{margin:0,padding:e.spacing(1)}}}))(_.a),N=Object(O.a)((function(e){return{layerBody:{background:"#F1F3F7",margin:"1%"},App:{marginLeft:"10%",marginRight:"10px"},column1:{padding:"0px",marginTop:"2%",height:"80%"},column2:{padding:"0px",width:"80%",height:"60%",margin:"1%",textAlign:"center"},column3:{width:"95%",padding:"0px",overflowY:"auto",overflowX:"hidden",textAlign:"center"},grid1:{},grid2:{},grid3:{},droppableColsource:{width:"95%",backgroundColor:"#252934",padding:"10px 10px 0 10px",borderRadius:"7px",display:"flex",flexDirection:"column",minHeight:"500px",maxHeight:"400px",overflowY:"auto",border:"1px solid black",marginLeft:"5%"},droppableColtarget:{width:"90%",backgroundColor:"#252934",padding:"10px 10px 0 10px",borderRadius:"7px",display:"flex",flexDirection:"column",minHeight:"500px",maxHeight:"500px",maxWidth:"100%",overflowY:"auto",border:"1px solid black",marginLeft:"15%"},body3:{width:"95%",backgroundColor:"#252934",padding:"10px",borderRadius:"7px",display:"flex",flexDirection:"column",minHeight:"500px",maxHeight:"480px",overflowY:"auto",color:"#FFF",border:"1px solid black"},item:{textAlign:"center",marginBottom:"10px",background:" #FFFFFF",color:"#252934",border:"1px solid black",padding:"5px",borderRadius:"7px"},item1selected:{textAlign:"center",marginBottom:"10px",backgroundColor:"#D8D8D8",color:"#000",border:"1px solid black",padding:"5px",borderRadius:"7px 7px 7px 7px",width:"85%"},item1:{textAlign:"center",marginBottom:"10px",padding:"3px",background:" #FFFFFF",color:"#252934",border:"1px solid black",borderRadius:"7px 7px 7px 7px",width:"85%"},item1Error:{textAlign:"center",marginBottom:"10px",padding:"5px",backgroundColor:"#D8D8D8",color:"#D00000",border:"1px solid black",borderRadius:"7px 7px 7px 7px",width:"85%"},cloneBtn:{float:"right",position:"relative",maxWidth:"30px",minWidth:"30px",maxHeight:"30px",minHeight:"30px"},errBtn:{float:"right",position:"relative",color:"#D00000",maxWidth:"30px",minWidth:"30px",maxHeight:"30px",minHeight:"30px"},inputFieldDesc:{fontSize:"80%",marginTop:"1px",fontWeight:"100",color:"#a2a4a8",marginLeft:"5%"},styleclose:{float:"right",height:"100%",cursor:"pointer",backgroundColor:"#FFC270",borderRadius:"0px 7px 7px 0px",border:"1px solid white",padding:"1px",marginBottom:"10px"},container:{position:"relative",paddingLeft:"10%"},heading:{textAlign:"center",fontSize:"120%",fontWeigth:"900",paddingBottom:"4px"},batch:{marginBottom:"10px",backgroundColor:"#f2f2f2",color:"black",border:"1px solid black",padding:"5px",borderRadius:"7px",position:"relative",minHeight:"80px",overflow:"auto"},title:{float:"left",width:"45%",minHeight:"70px",textAlign:"center",transform:"translateY(30%)",overflow:"auto"},spancss:{marginLeft:"40%",fontSize:"120%"},innerpad:{width:"100%"},value:{float:"left",width:"45%",minHeight:"70px",transform:"translateY(15%)"},infoiconLayer:{float:"right",textAlign:"center",transform:"translateY(50%)",marginLeft:"1%",cursor:"pointer"},infoiconPre:{float:"right",textAlign:"center",marginTop:"1%",cursor:"pointer"},infoiconHyper:{marginTop:"1%",cursor:"pointer"},input:{background:"#000"},delete:{width:"65%",backgroundColor:"#252934",padding:"10px",borderRadius:"7px",minHeight:"80px",minWeight:"60px",margin:"10px",textAlign:"center",marginLeft:"20%",marginRight:"20%",color:"#FFF",border:"1px solid black"},sel:{width:"20%",margin:"1%"},_hyper:{width:"400px",margin:"20px",marginLeft:"30%"},save_plot:{marginTop:"25px"},action_btn:{float:"right",margin:"5px"},pad:{padding:"7px"},tryUsBtn:{marginLeft:"45%",marginBottom:"1%",background:"#252934",border:"1px solid black",fontWeight:"bold",color:"white"},codeSnip:{width:"100%",overflowX:"hidden",filter:"blur(4px)",overflowY:"auto"}}})),T=i(67),F=i.n(T),A=i(65),k=i.n(A),I=i(138),S=i(66),C=i.n(S),B=i(64),L=i.n(B),P=i(146),W=i.p+"static/media/codeSnip.bce17447.PNG",H=function(e){var t=e.openModal,i=e.closeModal,a=Object(n.useCallback)((function(){i(!1)}),[i]),o=N();return Object(w.jsx)("div",{children:Object(w.jsxs)(P.a,{open:t,onClose:a,style:{height:"80%",marginTop:"5%",width:"100%",textAlign:"center",fontWeight:"bold"},children:[Object(w.jsx)(E,{id:"error-dialog-title",children:"Code  generated!!!"}),Object(w.jsx)(z,{dividers:!0,children:Object(w.jsx)("div",{className:o.codeSnip,children:Object(w.jsx)("div",{children:Object(w.jsx)("img",{src:W,alt:"code"})})})}),Object(w.jsx)(q,{style:{justifyContent:"center"},children:Object(w.jsx)(I.a,{style:{background:"#252934",color:"#FFFFFF"},variant:"contained",onClick:a,children:"REGISTER!"})})]})})},M=function(e){e.TabPanel;var t=e.handleDragEnd,i=e.jsondata,a=e.components,o=e.selected_layer,r=e.selected_layer_type,h=e.showdetails,g=e.handleCloneLayer,x=e.invalidLayerIndices,D=e.validLayerIndices,b=e.save_value,_=Object(m.a)(),y=N(),O=Object(n.useState)(""),v=Object(s.a)(O,2),j=v[0],R=v[1],E=Object(n.useState)(""),z=Object(s.a)(E,2),q=z[0],T=z[1],A=Object(n.useState)(""),S=Object(s.a)(A,2),B=S[0],P=S[1],W=Object(n.useState)(!1),M=Object(s.a)(W,2),Y=M[0],G=M[1];return Object(w.jsx)(f.a,{onDragEnd:t,theme:_,children:Object(w.jsxs)(d.a,{container:!0,children:[Object(w.jsx)(d.a,{item:!0,lg:3,md:3,sm:4,xs:4,className:y.grid1,children:Object(w.jsxs)("div",{className:y.column1,children:[Object(w.jsx)("span",{style:{marginLeft:"50%",fontSize:"120%",color:"#000"},children:"Layers"}),Object(w.jsx)(f.c,{droppableId:"source",children:function(e,t){return Object(w.jsxs)("div",Object(l.a)(Object(l.a)({ref:e.innerRef},e.droppableProps),{},{className:y.droppableColsource,children:[Object.keys(i).map((function(e,t){return Object(w.jsx)(f.b,{index:t,draggableId:e,children:function(i,n){return Object(w.jsxs)("div",Object(l.a)(Object(l.a)(Object(l.a)({className:y.item,ref:i.innerRef},i.draggableProps),i.dragHandleProps),{},{children:[e,D.includes(t)&&Object(w.jsx)(I.a,{size:"small",style:{color:"#5FCB8D"},onClick:function(){P(t),setTimeout((function(){return P("")}),3e3)},className:y.cloneBtn,children:Object(w.jsx)(L.a,{fontSize:"small"})}),B===t&&Object(w.jsx)("div",{style:{fontSize:"60%",marginTop:"1px",fontWeight:"bold",color:"#000",textAlign:"center"},children:"Tip : Valid layer to be added."})]}))}},e)})),e.placeholder]}))}})]},"source")}),Object(w.jsx)(d.a,{item:!0,lg:5,md:5,sm:4,xs:4,className:y.grid2,children:Object(w.jsxs)("div",{className:y.column2,children:[Object(w.jsx)("span",{style:{marginLeft:"25%",fontSize:"120%",color:"#000"},children:"Model"}),Object(w.jsx)(f.c,{droppableId:"target",children:function(e,t){return Object(w.jsxs)("div",Object(l.a)(Object(l.a)({ref:e.innerRef},e.droppableProps),{},{className:y.droppableColtarget,children:[a.map((function(e,t){return Object(w.jsx)(f.b,{index:t,draggableId:e.id,children:function(i,n){return Object(w.jsx)("div",Object(l.a)(Object(l.a)(Object(l.a)({className:y.container,ref:i.innerRef},i.draggableProps),i.dragHandleProps),{},{children:Object(w.jsxs)("div",{className:x.has(t)&&o===t?y.item1Error:o===t?y.item1selected:y.item1,onClick:function(){return h(e)},children:[e.name,Object(w.jsx)(I.a,{size:"small",onClick:function(){return g(e)},style:{color:"#000"},className:y.cloneBtn,children:Object(w.jsx)(k.a,{fontSize:"small"})}),x.has(t)&&Object(w.jsx)(I.a,{size:"small",onClick:function(){T(t),setTimeout((function(){return T("")}),3e3)},className:y.errBtn,children:Object(w.jsx)(C.a,{fontSize:"small"})}),q===t&&Object(w.jsx)("div",{style:{fontSize:"60%",marginTop:"1px",marginLeft:"4%",fontWeight:"bold",color:"#D00000"},children:"Warning : highlited layer is wrongly placed"})]})}))}},e.id)})),e.placeholder]}))}})]},"target")}),Object(w.jsx)(d.a,{item:!0,lg:4,md:4,sm:4,xs:4,className:y.grid3,children:Object(w.jsxs)("div",{className:y.column3,children:[Object(w.jsx)("span",{style:{fontSize:"120%",color:"#000"},children:0!==Object.keys(r).length?"name"in a[o]?a[o].name:null:Object(w.jsx)("div",{style:{opacity:"0"},children:"Layer"})}),Object(w.jsx)("div",{className:y.body3,children:0===Object.keys(r).length?Object(w.jsx)("h3",{style:{textAlign:"center"},children:"please select some layer first"}):Object(w.jsx)("div",{className:y.innerpad,children:Object.keys(a[o]).map((function(e,t){return Object(w.jsx)(n.Fragment,{children:"name"===e||"id"===e||"type"===e?null:Object(w.jsxs)("div",{className:y.batch,children:[Object(w.jsxs)("div",{className:y.title,children:[" ",e,"\xa0"," ",r[e]?1===r[e].Required?Object(w.jsx)("span",{children:"*"}):Object(w.jsx)("span",{}):null]}),Object(w.jsx)("div",{className:y.infoiconLayer,title:a[o][e].Description,children:Object(w.jsx)(F.a,{fontSize:"small",onClick:function(){R(e),setTimeout((function(){return R("")}),3e3)}})}),"select"===a[o][e].Datatype?Object(w.jsx)("div",{className:y.value,children:Object(w.jsxs)(p.a,{fullWidth:!0,variant:"outlined",size:"small",children:[Object(w.jsxs)(c.a,{native:!0,value:a[o][e].value?a[o][e].value:a[o][e].Default,onChange:b(e),children:[a[o][e].Options.map((function(e,t){return Object(w.jsx)("option",{value:e,children:e},t)}))," "]}),j===e?Object(w.jsx)("p",{style:{fontSize:"80%",marginTop:"1px",fontWeight:"100",color:"#a2a4a8"},children:a[o][e].Description}):Object(w.jsxs)("p",{style:{fontSize:"80%",marginTop:"1px",fontWeight:"100",color:"#a2a4a8"},children:["Example-",a[o][e].Example]})]})}):Object(w.jsx)("div",{className:y.value,children:Object(w.jsx)(u.a,{required:!0,style:{color:"#FFF"},size:"small",value:a[o][e].value?a[o][e].value:"NA"===a[o][e].Default?"":a[o][e].Default,variant:"outlined",onChange:b(e),helperText:"".concat(j===e?a[o][e].Description:"Example-".concat(a[o][e].Example))})})]})},t)}))})})]})}),Object(w.jsx)("div",{className:y.delete,children:Object(w.jsx)(f.c,{droppableId:"delete",children:function(e,t){return Object(w.jsxs)("div",Object(l.a)(Object(l.a)({ref:e.innerRef},e.droppableProps),{},{children:[Object(w.jsx)("h3",{children:"Drag here to delete the layer"}),e.placeholder]}))}})}),Object(w.jsx)(I.a,{style:{background:"#252934"},variant:"contained",onClick:function(){G(!0)},className:y.tryUsBtn,children:"Generate Code"}),Y&&Object(w.jsx)(H,{openModal:Y,closeModal:G})]})})},Y={Conv2D:{filters:{Example:32,Default:"NA",Required:1,Datatype:"number",Options:[],Description:"the dimensionality of the output space [i.e.the number of output filters in the convolution]"},data_format:{Example:"channels_last",Default:"channels_last",Required:0,Datatype:"select",Options:["channels_last","channels_first"],Description:"A string, one of channels_last [default] or channels_first."},kernel_size:{Example:[2,2],Default:"NA",Required:1,Datatype:"Tuple",Options:[],Description:"Specifies the height and width of the 2D convolution window"},strides:{Example:[1,1],Default:"1, 1",Required:0,Datatype:"Tuple",Options:[],Description:"Specifies the strides of the convolution along the height and width."},padding:{Example:"valid",Default:"valid",Required:0,Datatype:"select",Options:["valid","same"],Description:'"valid" means no padding. "same" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.'},kernel_initializer:{Example:"glorot_uniform",Default:"glorot_uniform",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the kernel weights matrix"},bias_initializer:{Example:"zeros",Default:"zeros",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the bias vector"}},Dense:{units:{Example:32,Default:"NA",Required:1,Datatype:"number",Options:[],Description:"Positive integer, dimensionality of the output space."},use_bias:{Example:"True",Default:"True",Required:0,Datatype:"select",Options:["True","False"],Description:"Boolean, whether the layer uses a bias vector."},activation:{Example:"relu",Default:"NA",Required:1,Datatype:"select",Options:["relu","sigmoid","softmax","softplus","softsign","tanh","selu","elu"],Description:"Activation function, if required"},kernel_initializer:{Example:"glorot_uniform",Default:"glorot_uniform",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the kernel weights matrix"},bias_initializer:{Example:"zeros",Default:"zeros",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the bias vector"}},LSTM:{units:{Example:32,Default:"NA",Required:1,Datatype:"number",Options:[],Description:"Positive integer, dimensionality of the output space."},activation:{Example:"tanh",Default:"tanh",Required:1,Datatype:"select",Options:["relu","sigmoid","softmax","softplus","softsign","tanh","selu","None","elu"],Description:'Activation function to use. Default: hyperbolic tangent [tanh]. If you pass None, no activation is applied [ie. "linear " activation: a[x] = x]'},recurrent_activation:{Example:"sigmoid",Default:"sigmoid",Required:1,Datatype:"select",Options:["relu","sigmoid","softmax","softplus","softsign","tanh","selu","None","elu"],Description:'Activation function to use for the recurrent step. Default: sigmoid [sigmoid]. If you pass None, no activation is applied [ie. "linear " activation: a[x] = x].'},kernel_initializer:{Example:"glorot_uniform",Default:"glorot_uniform",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the kernel weights matrix"},bias_initializer:{"Example ":"zeros ",Default:"zeros",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the bias vector"},dropout:{Default:0,Example:.4,Required:0,Datatype:"number",Options:[],Description:"Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0."},return_sequences:{Default:"False",Example:"True",Required:0,Datatype:"select",Options:["True","False"],Description:"Boolean. Whether to return the last output. in the output sequence, or the full sequence. Default: False"},return_state:{Default:"False",Example:"True",Required:0,Datatype:"select",Options:["True","False"],Description:"Boolean. Whether to return the last state in addition to the output. Default: False."}},SimpleRNN:{units:{Example:32,Default:"NA",Required:1,Datatype:"number",Options:[],Description:"Positive integer, dimensionality of the output space."},activation:{Example:"tanh",Default:"tanh",Required:1,Datatype:"select",Options:["relu","sigmoid","softmax","softplus","softsign","tanh","selu","None","elu"],Description:'Activation function to use. Default: hyperbolic tangent [tanh]. If you pass None, no activation is applied [ie. "linear " activation: a[x] = x]'},use_bias:{Example:"True",Default:"True",Required:0,Datatype:"select",Options:["True","False"],Description:"Boolean, whether the layer uses a bias vector."},dropout:{Default:0,Example:.4,Required:0,Datatype:"number",Options:[],Description:"Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0."}},Dropout:{rate:{Default:"NA",Example:.4,Required:1,Datatype:"float",Options:[],Description:"Float between 0 and 1. Fraction of the input units to drop."},noise_shape:{Default:"None",Example:"[batch_size, 1, features]",Required:0,Datatype:"Tuple",Options:[],Description:"1D integer tensor representing the shape of the binary dropout mask that will be multiplied with the input. For instance, if your inputs have shape [batch_size, timesteps, features] and you want the dropout mask to be the same for all timesteps, you can use noise_shape=[batch_size, 1, features]"},seed:{Default:"NA",Example:42,Required:0,Datatype:"number",Options:[],Description:"A Python integer to use as random seed"}},Flatten:{data_format:{Example:"channels_last",Default:"channels_last",Required:0,Datatype:"select",Options:["channels_last","channels_first"],Description:"A string, one of channels_last [default] or channels_first."}},ZeroPadding2D:{padding:{Example:[[1,1],[2,2]],Default:"NA",Required:1,Datatype:"Tuple",Options:[],Description:"The Tuple interpreted as [[top_pad, bottom_pad], [left_pad, right_pad]]"},data_format:{Example:"channels_last",Default:"channels_last",Required:0,Datatype:"select",Options:["channels_last","channels_first"],Description:"A string, one of channels_last [default] or channels_first."}},AveragePooling2D:{pool_size:{Example:[2,2],Default:"NA",Required:1,Datatype:"Tuple",Options:[],Description:"integer or Tuple of 2 integers, factors by which to downscale [vertical, horizontal]. [2, 2] will halve the input in both spatial dimension. If only one integer is specified, the same window length will be used for both dimensions"},strides:{Example:[2,2],Default:"NA",Required:0,Datatype:"Tuple",Options:[],Description:"Tuple of 2 integers, or None. Strides values. If None, it will default to pool_size."},data_format:{Example:"channels_last",Default:"channels_last",Required:0,Datatype:"select",Options:["channels_last","channels_first"],Description:"A string, one of channels_last [default] or channels_first."},padding:{Example:"valid",Default:"valid",Required:0,Datatype:"select",Options:["valid","same"],Description:'"valid" means no padding. "same" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.'}},MaxPooling2D:{pool_size:{Example:[2,2],Default:"NA",Required:1,Datatype:"Tuple",Options:[],Description:"integer or Tuple of 2 integers, factors by which to downscale [vertical, horizontal]. [2, 2] will halve the input in both spatial dimensions. If only one integer is specified, the same window length will be used for both dimensions"},strides:{Example:[2,2],Default:"NA",Required:0,Datatype:"Tuple",Options:[],Description:"Tuple of 2 integers, or None. Strides values. If None, it will default to pool_size."},data_format:{Example:"channels_last",Default:"channels_last",Required:0,Datatype:"select",Options:["channels_last","channels_first"],Description:"A string, one of channels_last [default] or channels_first."},padding:{Example:"valid",Default:"valid",Required:0,Datatype:"select",Options:["valid","same"],Description:'"valid" means no padding. "same" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.'}}},G=i(44),J=i.n(G),U={Conv2D:{parameters:{filters:{Example:32,Default:"NA",Required:1,Datatype:"number",Options:[],Description:"the dimensionality of the output space [i.e.the number of output filters in the convolution]"},data_format:{Example:"channels_last",Default:"channels_last",Required:0,Datatype:"select",Options:["channels_last","channels_first"],Description:"A string, one of channels_last [default] or channels_first."},kernel_size:{Example:[2,2],Default:"NA",Required:1,Datatype:"Tuple",Options:[],Description:"Specifies the height and width of the 2D convolution window"},strides:{Example:[1,1],Default:"1, 1",Required:0,Datatype:"Tuple",Options:[],Description:"Specifies the strides of the convolution along the height and width."},padding:{Example:"valid",Default:"valid",Required:0,Datatype:"select",Options:["valid","same"],Description:'"valid" means no padding. "same" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.'},kernel_initializer:{Example:"glorot_uniform",Default:"glorot_uniform",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the kernel weights matrix"},bias_initializer:{"Example ":"zeros",Default:"zeros",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the bias vector"}},dimensions:{expected_dim:3,returned_dim:3},config:{}},Dense:{parameters:{units:{Example:32,Default:"NA",Required:1,Datatype:"number",Options:[],Description:"Positive integer, dimensionality of the output space."},use_bias:{Example:"True",Default:"True",Required:0,Datatype:"select",Options:["True","False"],Description:"Boolean, whether the layer uses a bias vector."},activation:{Example:"relu",Default:"NA",Required:1,Datatype:"select",Options:["relu","sigmoid","softmax","softplus","softsign","tanh","selu","elu"],Description:"Activation function, if required"},kernel_initializer:{Example:"glorot_uniform",Default:"glorot_uniform",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the kernel weights matrix"},bias_initializer:{Example:"zeros",Default:"zeros",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the bias vector"}},dimensions:{expected_dim:1,returned_dim:1},config:{}},LSTM:{parameters:{units:{Example:32,Default:"NA",Required:1,Datatype:"number",Options:[],Description:"Positive integer, dimensionality of the output space."},activation:{Example:"tanh",Default:"tanh",Required:1,Datatype:"select",Options:["relu","sigmoid","softmax","softplus","softsign","tanh","selu","None","elu"],Description:'Activation function to use. Default: hyperbolic tangent [tanh]. If you pass None, no activation is applied [ie. "linear " activation: a[x] = x]'},recurrent_activation:{Example:"sigmoid",Default:"sigmoid",Required:1,Datatype:"select",Options:["relu","sigmoid","softmax","softplus","softsign","tanh","selu","None","elu"],Description:'Activation function to use for the recurrent step. Default: sigmoid [sigmoid]. If you pass None, no activation is applied [ie. "linear " activation: a[x] = x].'},kernel_initializer:{Example:"glorot_uniform",Default:"glorot_uniform",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the kernel weights matrix"},bias_initializer:{"Example ":"zeros ",Default:"zeros",Required:0,Datatype:"select",Options:["random_normal","random_uniform","truncated_normal","truncated_uniform","zeros","ones","glorot_normal","glorot_uniform","identity"],Description:"Initializer for the bias vector"},dropout:{Default:0,Example:.4,Required:0,Datatype:"number",Options:[],Description:"Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0."},return_sequences:{Default:"False",Example:"True",Required:0,Datatype:"select",Options:["True","False"],Description:"Boolean. Whether to return the last output. in the output sequence, or the full sequence. Default: False"},return_state:{Default:"False",Example:"True",Required:0,Datatype:"select",Options:["True","False"],Description:"Boolean. Whether to return the last state in addition to the output. Default: False."}},dimensions:{expected_dim:2,returned_dim:2},config:{}},SimpleRNN:{parameters:{units:{Example:32,Default:"NA",Required:1,Datatype:"number",Options:[],Description:"Positive integer, dimensionality of the output space."},activation:{Example:"tanh",Default:"tanh",Required:1,Datatype:"select",Options:["relu","sigmoid","softmax","softplus","softsign","tanh","selu","None","elu"],Description:'Activation function to use. Default: hyperbolic tangent [tanh]. If you pass None, no activation is applied [ie. "linear " activation: a[x] = x]'},use_bias:{Example:"True",Default:"True",Required:0,Datatype:"select",Options:["True","False"],Description:"Boolean, whether the layer uses a bias vector."},dropout:{Default:0,Example:.4,Required:0,Datatype:"number",Options:[],Description:"Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0."}},dimensions:{expected_dim:1,returned_dim:1},config:{}},Dropout:{parameters:{rate:{Default:"NA",Example:.4,Required:1,Datatype:"float",Options:[],Description:"Float between 0 and 1. Fraction of the input units to drop."},noise_shape:{Default:"None",Example:"[batch_size, 1, features]",Required:0,Datatype:"Tuple",Options:[],Description:"1D integer tensor representing the shape of the binary dropout mask that will be multiplied with the input. For instance, if your inputs have shape [batch_size, timesteps, features] and you want the dropout mask to be the same for all timesteps, you can use noise_shape=[batch_size, 1, features]"},seed:{Default:"NA",Example:42,Required:0,Datatype:"number",Options:[],Description:"A Python integer to use as random seed"}},dimensions:{expected_dim:"all",returned_dim:"same"},config:{}},Flatten:{parameters:{data_format:{Example:"channels_last",Default:"channels_last",Required:0,Datatype:"select",Options:["channels_last","channels_first"],Description:"A string, one of channels_last [default] or channels_first."}},dimensions:{expected_dim:"all",returned_dim:1},config:{}},ZeroPadding2D:{parameters:{padding:{Example:[[1,1],[2,2]],Default:"NA",Required:1,Datatype:"Tuple",Options:[],Description:"The Tuple interpreted as [[top_pad, bottom_pad], [left_pad, right_pad]]"},data_format:{Example:"channels_last",Default:"channels_last",Required:0,Datatype:"select",Options:["channels_last","channels_first"],Description:"A string, one of channels_last [default] or channels_first."}},dimensions:{expected_dim:3,returned_dim:3},config:{}},AveragePooling2D:{parameters:{pool_size:{Example:[2,2],Default:"NA",Required:1,Datatype:"Tuple",Options:[],Description:"integer or Tuple of 2 integers, factors by which to downscale [vertical, horizontal]. [2, 2] will halve the input in both spatial dimension. If only one integer is specified, the same window length will be used for both dimensions"},strides:{Example:[2,2],Default:"NA",Required:0,Datatype:"Tuple",Options:[],Description:"Tuple of 2 integers, or None. Strides values. If None, it will default to pool_size."},data_format:{Example:"channels_last",Default:"channels_last",Required:0,Datatype:"select",Options:["channels_last","channels_first"],Description:"A string, one of channels_last [default] or channels_first."},padding:{Example:"valid",Default:"valid",Required:0,Datatype:"select",Options:["valid","same"],Description:'"valid" means no padding. "same" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.'}},dimensions:{expected_dim:3,returned_dim:3},config:{}},MaxPooling2D:{parameters:{pool_size:{Example:[2,2],Default:"NA",Required:1,Datatype:"Tuple",Options:[],Description:"integer or Tuple of 2 integers, factors by which to downscale [vertical, horizontal]. [2, 2] will halve the input in both spatial dimensions. If only one integer is specified, the same window length will be used for both dimensions"},strides:{Example:[2,2],Default:"NA",Required:0,Datatype:"Tuple",Options:[],Description:"Tuple of 2 integers, or None. Strides values. If None, it will default to pool_size."},data_format:{Example:"channels_last",Default:"channels_last",Required:0,Datatype:"select",Options:["channels_last","channels_first"],Description:"A string, one of channels_last [default] or channels_first."},padding:{Example:"valid",Default:"valid",Required:0,Datatype:"select",Options:["valid","same"],Description:'"valid" means no padding. "same" results in padding evenly to the left/right or up/down of the input such that output has the same height/width dimension as the input.'}},dimensions:{expected_dim:3,returned_dim:3},config:{}}};var X=function(){var e=N(),t=Object(n.useState)([]),i=Object(s.a)(t,2),a=i[0],o=i[1],r=Object(n.useState)(""),l=Object(s.a)(r,2),d=l[0],p=l[1],c=Object(n.useState)(-1),u=Object(s.a)(c,2),m=u[0],f=u[1],h=Object(n.useState)(new Set),g=Object(s.a)(h,2),x=g[0],D=g[1],b=Object(n.useState)([0,1,2,3,4,5,6,7,8,9]),_=Object(s.a)(b,2),y=_[0],O=_[1];return Object(w.jsx)("div",{className:e.layerBody,children:Object(w.jsx)(M,{handleDragEnd:function(e){var t=e.destination,i=e.source,n=J.a.cloneDeep(a);if(console.log("components before",a),t&&(t.index!==i.index||t.droppableId!==i.droppableId))if("source"!==t.droppableId){if("delete"===t.droppableId&&"target"===i.droppableId){console.log("deleting from target");var r=n[i.index],s=n.filter((function(e){return e!==r}));n=s,f(-1),p("")}if("target"===t.droppableId&&"target"===i.droppableId){var l=!1;console.log('tempArr["id"] selected_layer_type["id"]',n[i.index].id,d.id),n[i.index].id===d.id&&(l=!0),n.splice(t.index,0,n.splice(i.index,1)[0]),l?(p(n[t.index]),f(t.index),console.log("selected_layer_type on drag and id is  ",d,d.id)):(p(""),f(-1));for(var c=0;c<n.length;c++)if(n[c].id=n[c].id+c,0===c)"input_size"in n[c]&&"input_shape"in n[c]||(n[c].input_shape={Example:[200,200,3],Default:"NA",Required:1,Datatype:"Tuple",Options:[],Description:"Input shape for the first layer"});else try{delete n[c].input_shape}catch(_){}}if("target"===t.droppableId&&"source"===i.droppableId){console.log("dropping from source to target");var u=Object.keys(Y),m=Y[u[i.index]],h=J.a.cloneDeep(m);for(h.id="".concat(u[i.index],"-").concat(i.index,"-").concat(t.index),h.name=u[i.index],n.splice(t.index,0,h),c=0;c<n.length;c++)if(n[c].id=n[c].id+c,0===c)"input_size"in n[c]&&"input_shape"in n[c]||(n[c].input_shape={Example:[200,200,3],Default:"NA",Required:1,Datatype:"Tuple",Options:[],Description:"Input shape for the first layer"});else try{delete n[c].input_shape}catch(_){}}var g=function(e){var t=new Set,i=[];if(console.log("compo valid",e),i=e.length>0?function(e){var t=0,i=[];for(var n in U)U[e].dimensions.returned_dim!==U[n].dimensions.expected_dim&&"all"!==U[n].dimensions.expected_dim||i.push(t),t++;return i}(e[e.length-1].name):[0,1,2,3,4,5,6,7,8,9],1!==e.length)for(var n=1;n<e.length;n++)"all"!==U[e[n].name].dimensions.expected_dim&&U[e[n-1].name].dimensions.returned_dim!==U[e[n].name].dimensions.expected_dim&&t.add(n);return console.log("components are and error are",e,t),{invalidIndices:t,validIndices:i}}(n),x=g.invalidIndices,b=g.validIndices;console.log("val res is",x,b),D(x),O(b),o(n)}else console.log("dropping in  source",n)},jsondata:Y,components:a,selected_layer:m,selected_layer_type:d,showdetails:function(e){p(e),console.log("selected layer type is ",d);var t=a.lastIndexOf(e);console.log("index is ",t),f(t)},handleCloneLayer:function(e){for(var t,i=Object.keys(Y),n=Number(e.id[e.id.length-1])+1,r=0;r<i.length;r++)if(e.name===i[r]){t=r;break}var s=J.a.cloneDeep(e);s.id="".concat(e.name,"-").concat(t,"-").concat(n),s.name=i[t],a.splice(n,0,s);for(var l=0;l<a.length;l++)if(a[l].id=a[l].id+l,0===l)"input_size"in a[l]&&"input_shape"in a[l]||(a[l].input_shape={Example:[200,200,3],Default:"NA",Required:1,Datatype:"Tuple",Options:[],Description:"Input shape for the first layer"});else try{delete a[l].input_shape}catch(p){}var d=J.a.cloneDeep(a);o(d)},invalidLayerIndices:x,validLayerIndices:y,save_value:function(e){return function(t){var i=e,n=m,r=Object.assign([],a);r[n][i].value=t.target.value,console.log("prop is ",e),console.log(t.target.value),console.log(a),o(r)}}})})},Z=function(e){e&&e instanceof Function&&i.e(3).then(i.bind(null,149)).then((function(t){var i=t.getCLS,n=t.getFID,a=t.getFCP,o=t.getLCP,r=t.getTTFB;i(e),n(e),a(e),o(e),r(e)}))};r.a.render(Object(w.jsx)(a.a.StrictMode,{children:Object(w.jsx)(X,{})}),document.getElementById("root")),Z()}},[[95,1,2]]]);
//# sourceMappingURL=main.98f725d0.chunk.js.map